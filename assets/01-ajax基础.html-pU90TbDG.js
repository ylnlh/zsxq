import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-rpFDZqdF.js";const p={},e=t(`<h1 id="ajax简要札记" tabindex="-1"><a class="header-anchor" href="#ajax简要札记" aria-hidden="true">#</a> AJAX简要札记</h1><hr><p>$$ 有了ajax，前端有了一道分水岭 $$</p><h2 id="_1-0-关于ajax和异步" tabindex="-1"><a class="header-anchor" href="#_1-0-关于ajax和异步" aria-hidden="true">#</a> 1.0 关于ajax和异步</h2><h4 id="ajax是什么" tabindex="-1"><a class="header-anchor" href="#ajax是什么" aria-hidden="true">#</a> ajax是什么</h4><p>​ Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术</p><p>​ 关键词： <strong>异步，不需要页面跳转</strong>，<strong>局部刷新</strong></p><p><code>__本质： 基于http协议以异步的方式通过 XMLHttpRequest对象 向服务器进行通信__</code></p><p><code>__作用： 在页面不刷新的情况下，请求服务器，实现局部的渲染数据__</code></p><h4 id="什么是异步" tabindex="-1"><a class="header-anchor" href="#什么是异步" aria-hidden="true">#</a> 什么是异步</h4><p>​ 异步的反义词就是同步，同步指在网页的一次请求中，如果不完成这次请求，就不会响应其他的任何操作，效率比较慢；</p><h5 id="通过后台处理页面跳转" tabindex="-1"><a class="header-anchor" href="#通过后台处理页面跳转" aria-hidden="true">#</a> 通过后台处理页面跳转</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">/*  
	以往方式写出来的页面，是静态的，数据没有办法改变和刷新
	使用php书写：
		a, 所有要操作的文件后缀名改成php, 或者通过提交按钮和a链接跳转到php文件
		b, 参数必须拼在a链接后面或者form表单内部
		b, 书写符合php语法的代码，方法较多难以记忆
		c, 在页面中来来回回的跳转, 发送的请求要等待完成之后才能做其他的操作
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端的register.html文件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./register.php<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>     
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  
    用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    昵称：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nickname<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    密码： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>   
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>注册<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后台处理的php文件</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content-type:text/html;charset=utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;REQUEST_METHOD&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;POST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//获取用户名</span>
        <span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//判断数据库中是否已有这个用户名</span>
        <span class="token variable">$names</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;jack&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;rose&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;tom&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;lili&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//有则注册失败，否则成功</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$names</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;这个名字太火了，换一个吧！&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
            <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;refresh:10;url=register.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;恭喜，名字可用！&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
            <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;refresh:2;url=register.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="通过前端发送ajax请求" tabindex="-1"><a class="header-anchor" href="#通过前端发送ajax请求" aria-hidden="true">#</a> 通过前端发送ajax请求</h5><p>​ 异步就是在发起请求之后，不用理会这个过程，等请求结束了，自动返回回来数据，不用进行等待；</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">/*
	a, 原先是html的文件还是html，不用修改文件类型
	b, 发送请求不再仅仅依靠a链接或者表单元素
	c, 不需要来回跳转页面，用户不需要进行等待
	d, 返回的数据可以在局部进行刷新
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端的register.html文件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>     
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  
    用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    昵称：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nickname<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    密码： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>   
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>注册<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 显示ajax请求返回回来的数据 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showmsg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端基于http发送的一个异步请求</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onblur</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 1.获取用户数据</span>
            <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>

            <span class="token comment">// 2.1 创建异步对象</span>
            <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 2.2 请求行发送 open(请求方式，请求url+键值对的参数):</span>
            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;validate.php?username=&quot;</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
          	<span class="token comment">// 2.3 get请求没有请求头</span>
            <span class="token comment">// 2.4 请求体:发送请求 </span>
            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      		<span class="token comment">// 2.5 通过readystate发生改变的事件处理响应</span>
            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              	<span class="token comment">// 2.6 判断请求是否结束后成功返回   判断服务器状态码是否为200</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  	<span class="token comment">// 通过xhr对象的responseText接收返回的数据，写入盒子内</span>
                    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.showmsg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>处理后端的php文件</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content-type:text/html;charset=utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;REQUEST_METHOD&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//获取用户名</span>
        <span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//判断数据库中是否已有这个用户名</span>
        <span class="token variable">$names</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;jack&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;rose&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;tom&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;lili&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//有则注册失败，否则成功</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$names</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;这个名字太火了，换一个吧！&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
            <span class="token comment">// header(&quot;refresh:10;url=register.html&quot;);</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;恭喜，名字可用！&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
            <span class="token comment">// header(&quot;refresh:2;url=register.html&quot;);</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="前端的get请求" tabindex="-1"><a class="header-anchor" href="#前端的get请求" aria-hidden="true">#</a> 前端的get请求</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 1.1 创建异步对象</span>
<span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1.2 请求行发送 open(请求方式，请求url+键值对的参数):</span>
<span class="token class-name return-type">xhr</span><span class="token operator">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;get&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;validate.php?username=&quot;</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// url地址 ? 键=值 &amp; 键=值 &amp; 键=值</span>
<span class="token comment">// 1.3 get请求没有请求头</span>
<span class="token comment">// 1.4 请求体:发送请求 </span>
xhr<span class="token operator">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1.5 通过readystate发生改变的事件处理响应</span>
xhr<span class="token operator">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 1.6 判断请求是否结束后成功返回   判断服务器状态码是否为200</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token operator">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token operator">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 通过xhr对象的responseText接收返回的数据，写入盒子内</span>
        document<span class="token operator">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;.showmsg&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token operator">.</span>responseText<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="前端的post请求" tabindex="-1"><a class="header-anchor" href="#前端的post请求" aria-hidden="true">#</a> 前端的post请求</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 1.1 创建异步对象</span>
<span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1.2 设置请求行 open(请求方式，请求url)</span>
<span class="token comment">// post请求不需要拼接参数</span>
xhr<span class="token operator">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;post&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;validate.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1.3 设置请求头:setRequestHeader()</span>
xhr<span class="token operator">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1.4 设置请求体 send()</span>
<span class="token comment">// post的参数在这个函数中设置(如果有参数)</span>
xhr<span class="token operator">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username=&quot;</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1.5 通过readystate发生改变的事件处理响应</span>
xhr<span class="token operator">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 1.6 判断请求是否结束后成功返回   判断服务器状态码是否为200</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token operator">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token operator">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 通过xhr对象的responseText接收返回的数据，写入盒子内</span>
        document<span class="token operator">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;.showmsg&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token operator">.</span>responseText<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于get请求和post的请求区别是什么</p><p>1、GET没有请求主体，使用xhr.send(null) 2、GET可以通过在请求URL上添加请求参数 3、POST可以通过xhr.send(&#39;name=itcast&amp;age=10&#39;) 4、POST需要设置 Content-type:application/x-www-form-urlencoded</p><hr><h2 id="_2-0-使用异步对象发送读取json文件" tabindex="-1"><a class="header-anchor" href="#_2-0-使用异步对象发送读取json文件" aria-hidden="true">#</a> 2.0 使用异步对象发送读取JSON文件</h2><p>​ 在项目开发过程中，用的最多的方式就是json</p><h4 id="json格式的数据和特点" tabindex="-1"><a class="header-anchor" href="#json格式的数据和特点" aria-hidden="true">#</a> json格式的数据和特点</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
       <span class="token property">&quot;src&quot;</span><span class="token operator">:</span><span class="token string">&quot;./images/nav_1.png&quot;</span> <span class="token punctuation">,</span>
       <span class="token property">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;京东超市&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;src&quot;</span><span class="token operator">:</span><span class="token string">&quot;./images/nav_2.png&quot;</span> <span class="token punctuation">,</span>
        <span class="token property">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;全球购物&quot;</span>
     <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span>
        <span class="token property">&quot;src&quot;</span><span class="token operator">:</span><span class="token string">&quot;./images/nav_3.png&quot;</span> <span class="token punctuation">,</span>
        <span class="token property">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;京东市场&quot;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="规则和特点" tabindex="-1"><a class="header-anchor" href="#规则和特点" aria-hidden="true">#</a> 规则和特点</h5><table><thead><tr><th>关于json的描述</th></tr></thead><tbody><tr><td>1，一组花括号表示一个对象，一个对象通过键值对写入一堆相关数据</td></tr><tr><td>2，一组方括号表示一个数组，多组对象通过数组的方式装载</td></tr><tr><td>3，对象的所有属性都必须加上双引号，值没有undefined</td></tr><tr><td>4，文件后缀名为.json，json格式的数据内不允许写注释</td></tr></tbody></table><h5 id="操作json的方法" tabindex="-1"><a class="header-anchor" href="#操作json的方法" aria-hidden="true">#</a> 操作json的方法</h5><table><thead><tr><th>前端操作json的方式</th><th></th></tr></thead><tbody><tr><td>JSON.parse(json字符串)</td><td>将json格式的字符串转换为数组或者对象</td></tr><tr><td>JSON.stringify(对象或者数组)</td><td>将字面量对象或者数组转换为json格式的字符串</td></tr></tbody></table><table><thead><tr><th>php操作json的方式</th><th></th></tr></thead><tbody><tr><td>json_decode(json字符串)</td><td>将json格式的字符串转换为php的数组或者对象</td></tr><tr><td>json_encode(关联数组)</td><td>将php的数组转换为json字符串</td></tr></tbody></table><h4 id="关于json的操作" tabindex="-1"><a class="header-anchor" href="#关于json的操作" aria-hidden="true">#</a> 关于json的操作</h4><p>​ 拿到数据之后，大部分情况下是一个装了很多数据的数组，里面是一个个对象</p><p>所以需要对数组进行循环遍历</p><p>通过for循环，拿到每一个对象，通过在循环中，拿到当前对象某个属性对应的值</p><p><code>data[i].src</code> <code>data[i][&quot;src&quot;]</code></p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>
        <span class="token comment">// 通过操作json的方法获取到data数组</span>
        <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;&lt;li&gt;&quot;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;a href=&quot;#&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">+</span> <span class="token string">&#39;&quot; alt=&quot;&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;p&gt;&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">&#39;&lt;/p&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/a&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/li&gt;&#39;</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    
		<span class="token punctuation">}</span>
        <span class="token comment">// 将生成的页面结构添加到dom元素中</span>
		document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端处理php文件的代码</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;../data/nav.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_3-0-xml语法和文件操作" tabindex="-1"><a class="header-anchor" href="#_3-0-xml语法和文件操作" aria-hidden="true">#</a> 3.0 xml语法和文件操作</h2><p>​ 以前比较频繁的数据传输方式就是xml的文件格式，它是html的一个扩展</p><h4 id="xml文件格式的创建" tabindex="-1"><a class="header-anchor" href="#xml文件格式的创建" aria-hidden="true">#</a> xml文件格式的创建</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token comment">&lt;!-- 上面这一句必须是整个xml文档的第一句，否则格式错误 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 标签名称 以字母和下划线开头，不能有空格，不能包含特殊字符，区分大小写 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>items</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 说明下面的内容需要描述为数组 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!-- 描述数组中的具体的成员值 --&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>src</span><span class="token punctuation">&gt;</span></span>./images/nav_1.png<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>src</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>京东超市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!-- 描述数组中的具体的成员值 --&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>src</span><span class="token punctuation">&gt;</span></span>./images/nav_2.png<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>src</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>全球购物<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!-- 描述数组中的具体的成员值 --&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>src</span><span class="token punctuation">&gt;</span></span>./images/nav_3.png<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>src</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>京东市场123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>items</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="xml文件的规则和特点" tabindex="-1"><a class="header-anchor" href="#xml文件的规则和特点" aria-hidden="true">#</a> xml文件的规则和特点</h5><table><thead><tr><th>关于xml数据格式的规则</th></tr></thead><tbody><tr><td>1，文件后缀名必须得为.xml格式</td></tr><tr><td>2，必须得在头部声明那样一句话，相当于doctype声明</td></tr><tr><td>3，内容都以双标签包裹，可以嵌套和并列，不能交叉</td></tr><tr><td>4，标签名称以字母和下划线开头，叫什么，多长的名称无所谓</td></tr></tbody></table><h4 id="关于xml的操作" tabindex="-1"><a class="header-anchor" href="#关于xml的操作" aria-hidden="true">#</a> 关于xml的操作</h4><p>前端获取xml文件的内容</p><p>​ 在响应成功后，通过responseXML来接收当前的数据，会拿到一长串标签</p><p>​ 此时可以使用js中选择器，选择对应的标签 xhr.responseXML.querySelector(&quot;标签名称&quot;)</p><p>​ 如果获取到的是多个元素，则需要遍历，也是可以通过获取元素内的数据传递给其他标签</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// responseText：接收普通字符串 responseXML：专门用来接收服务器返回的xml数据的</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseXML<span class="token punctuation">;</span>
		<span class="token comment">// 将获取到的数据生成动态的页面结构</span>
		<span class="token keyword">var</span> items <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          	<span class="token comment">// 获取到标签内部的数据</span>
          	<span class="token keyword">var</span> src <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>
            <span class="token keyword">var</span> text <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>
        	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;&lt;li&gt;&quot;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;a href=&quot;#&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">+</span> src <span class="token operator">+</span> <span class="token string">&#39;&quot; alt=&quot;&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;p&gt;&#39;</span> <span class="token operator">+</span> text <span class="token operator">+</span> <span class="token string">&#39;&lt;/p&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/a&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/li&gt;&#39;</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    
		<span class="token punctuation">}</span>
        <span class="token comment">// 将生成的页面结构添加到dom元素中</span>
		document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端php文件处理xml文件的请求</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token comment">// 默认返回数据的类型</span>
    <span class="token comment">// header(&quot;Content-Type:text/html;charset=utf-8&quot;);</span>
    <span class="token comment">// 如果需要返回数据为xml,那么标准的响应头的写法应该是</span>
    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Content-Type:application/xml;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;../data/nav.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-0-改进和封装工具" tabindex="-1"><a class="header-anchor" href="#_4-0-改进和封装工具" aria-hidden="true">#</a> 4.0 改进和封装工具</h2><p>$$ 封装的目的是为了方便更高效的使用，一次封装多次调用 $$</p><h4 id="代码的封装" tabindex="-1"><a class="header-anchor" href="#代码的封装" aria-hidden="true">#</a> 代码的封装</h4><p>​ 关于代码的封装，重点在于要知道怎么使用，具体的封装过程等到了一定的开发经验再把玩</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> dilireba <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 将{&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:20} 的参数要转换为 ?name=jack&amp;age=20</span>
    <span class="token function-variable function">getpa</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> data <span class="token operator">==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
                str <span class="token operator">=</span> str <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>str<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">ajax</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 接收用户参数进行相应处理</span>
        <span class="token keyword">var</span> type <span class="token operator">=</span> option<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">;</span>
        <span class="token comment">// location.href 可以获取当前文件的路径 </span>
        <span class="token keyword">var</span> url <span class="token operator">=</span> option<span class="token punctuation">.</span>url <span class="token operator">||</span> location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
        <span class="token comment">// 接收参数:在js中最方便收集的数据类型为对象，所以我们就规定传递的参数必须是对象</span>
        <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getpa</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 响应成功之后的回调函数 =&gt; 这个函数一般就是处理字符拼接，标签渲染的函数</span>
        <span class="token keyword">var</span> success <span class="token operator">=</span> option<span class="token punctuation">.</span>success<span class="token punctuation">;</span>
        
      	<span class="token comment">// 创建异步对象</span>
        <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 请求行  如果是get请求就需要拼接参数</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            url <span class="token operator">+=</span> data<span class="token punctuation">;</span>
            data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 拼接后设置data为null，在send()方法中就不会再次发送</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 请求头  如果是post才需要请求头</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 请求体</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 让异步对象接收响应</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 一个成功的响应有两个条件：1.服务器成功响应 2.数据解析完毕可以使用</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// 接收响应的返回值 responseText   responseXML</span>
                <span class="token keyword">var</span> rh <span class="token operator">=</span> xhr<span class="token punctuation">.</span><span class="token function">getResponseHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>rh<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;xml&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">var</span> result <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseXML<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>rh<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token keyword">var</span> result <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 接收数据之后，调用回调函数</span>
                success <span class="token operator">&amp;&amp;</span> <span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="封装代码的使用" tabindex="-1"><a class="header-anchor" href="#封装代码的使用" aria-hidden="true">#</a> 封装代码的使用</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>dilireba<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;./server/nav-json.php&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;&lt;li&gt;&quot;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;a href=&quot;#&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">+</span> <span class="token string">&#39;&quot; alt=&quot;&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;p&gt;&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">&#39;&lt;/p&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/a&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/li&gt;&#39;</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    
		<span class="token punctuation">}</span>
        <span class="token comment">// 将生成的页面结构添加到dom元素中</span>
		document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p>`,75),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","01-ajax基础.html.vue"]]);export{k as default};
