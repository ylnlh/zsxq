import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as e}from"./app-rpFDZqdF.js";const t={},i=e(`<blockquote><p>第01阶段.前端基础.盒子模型</p></blockquote><h1 id="盒子模型-css重点" tabindex="-1"><a class="header-anchor" href="#盒子模型-css重点" aria-hidden="true">#</a> 盒子模型（CSS重点）</h1><p>css学习三大重点： css 盒子模型 、 浮动 、 定位</p><p>主题思路：</p><p>目标：</p><ul><li>理解： <ul><li>能说出盒子模型有那四部分组成</li><li>能说出内边距的作用以及对盒子的影响</li><li>能说出padding设置不同数值个数分别代表的意思</li><li>能说出块级盒子居中对齐需要的2个条件</li><li>能说出外边距合并的解决方法</li></ul></li><li>应用： <ul><li>能利用边框复合写法给元素添加边框</li><li>能计算盒子的实际大小</li><li>能利用盒子模型布局模块案例</li></ul></li></ul><h2 id="_1-看透网页布局的本质" tabindex="-1"><a class="header-anchor" href="#_1-看透网页布局的本质" aria-hidden="true">#</a> 1.看透网页布局的本质</h2><p>网页布局中，我们是如何把里面的文字，图片，按照美工给我们的效果图排列的整齐有序呢？</p><ul><li>看透网页布局的本质： <ul><li>首先利用CSS设置好盒子的大小，然后摆放盒子的位置。</li><li>最后把网页元素比如文字图片等等，放入盒子里面。</li><li>以上两步 就是网页布局的本质</li></ul></li></ul><p>我们明白了，盒子是网页布局的关键点，所以我们更应该弄明白 这个盒子有什么特点。</p><h2 id="_2-盒子模型-box-model" tabindex="-1"><a class="header-anchor" href="#_2-盒子模型-box-model" aria-hidden="true">#</a> 2. 盒子模型（Box Model）</h2><ul><li><p>所谓盒子模型：</p><ul><li>就是把HTML页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</li></ul><p><strong>pink老师总结：</strong></p><ul><li>盒子模型有元素的内容、边框（border）、内边距（padding）、和外边距（margin）组成。</li><li>盒子里面的文字和图片等元素是 内容区域</li><li>盒子的厚度 我们称为 盒子的边框</li><li>盒子内容与边框的距离是内边距（类似单元格的 cellpadding)</li><li>盒子与盒子之间的距离是外边距（类似单元格的 cellspacing）</li></ul></li></ul><p><strong>标准盒子模型</strong></p><h2 id="_3-盒子边框-border" tabindex="-1"><a class="header-anchor" href="#_3-盒子边框-border" aria-hidden="true">#</a> 3. 盒子边框（border）</h2><ul><li>语法：</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border</span> <span class="token punctuation">:</span> border-width || border-style || border-color 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>属性</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td>border-width</td><td style="text-align:center;">定义边框粗细，单位是px</td></tr><tr><td>border-style</td><td style="text-align:center;">边框的样式</td></tr><tr><td>border-color</td><td style="text-align:center;">边框颜色</td></tr></tbody></table><ul><li>边框的样式： <ul><li>none：没有边框即忽略所有边框的宽度（默认值）</li><li>solid：边框为单实线(最为常用的)</li><li>dashed：边框为虚线</li><li>dotted：边框为点线</li></ul></li></ul><h3 id="_3-1-边框综合设置" tabindex="-1"><a class="header-anchor" href="#_3-1-边框综合设置" aria-hidden="true">#</a> 3.1 边框综合设置</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>border : border-width || border-style || border-color 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>  没有顺序  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-盒子边框写法总结表" tabindex="-1"><a class="header-anchor" href="#_3-2-盒子边框写法总结表" aria-hidden="true">#</a> 3.2 盒子边框写法总结表</h3><p>很多情况下，我们不需要指定4个边框，我们是可以单独给4个边框分别指定的。</p><table><thead><tr><th style="text-align:left;">上边框</th><th style="text-align:left;">下边框</th><th style="text-align:left;">左边框</th><th style="text-align:left;">右边框</th></tr></thead><tbody><tr><td style="text-align:left;">border-top-style:样式;</td><td style="text-align:left;">border-bottom-style:样式;</td><td style="text-align:left;">border-left-style:样式;</td><td style="text-align:left;">border-right-style:样式;</td></tr><tr><td style="text-align:left;">border-top-width:宽度;</td><td style="text-align:left;">border- bottom-width:宽度;</td><td style="text-align:left;">border-left-width:宽度;</td><td style="text-align:left;">border-right-width:宽度;</td></tr><tr><td style="text-align:left;">border-top-color:颜色;</td><td style="text-align:left;">border- bottom-color:颜色;</td><td style="text-align:left;">border-left-color:颜色;</td><td style="text-align:left;">border-right-color:颜色;</td></tr><tr><td style="text-align:left;">border-top:宽度 样式 颜色;</td><td style="text-align:left;">border-bottom:宽度 样式 颜色;</td><td style="text-align:left;">border-left:宽度 样式 颜色;</td><td style="text-align:left;">border-right:宽度 样式 颜色;</td></tr></tbody></table><h3 id="_3-3-表格的细线边框" tabindex="-1"><a class="header-anchor" href="#_3-3-表格的细线边框" aria-hidden="true">#</a> 3.3 表格的细线边框</h3><ul><li><p>通过表格的<code>cellspacing=&quot;0&quot;</code>,将单元格与单元格之间的距离设置为0，</p></li><li><p>但是两个单元格之间的边框会出现重叠，从而使边框变粗</p></li><li><p>通过css属性：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>table{ border-collapse:collapse; }  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>collapse 单词是合并的意思</li><li>border-collapse:collapse; 表示相邻边框合并在一起。</li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">&lt;style&gt;
	table</span> <span class="token punctuation">{</span>
		<span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
		<span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
		<span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token selector">td</span> <span class="token punctuation">{</span>
		<span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
		<span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token selector">table, td</span> <span class="token punctuation">{</span>
		<span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>  <span class="token comment">/*合并相邻边框*/</span>
	<span class="token punctuation">}</span>
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-内边距-padding" tabindex="-1"><a class="header-anchor" href="#_4-内边距-padding" aria-hidden="true">#</a> 4. 内边距（padding）</h2><h3 id="_4-1-内边距" tabindex="-1"><a class="header-anchor" href="#_4-1-内边距" aria-hidden="true">#</a> 4.1 内边距：</h3><p>​ padding属性用于设置内边距。 <strong>是指 边框与内容之间的距离。</strong></p><h3 id="_4-2-设置" tabindex="-1"><a class="header-anchor" href="#_4-2-设置" aria-hidden="true">#</a> 4.2 设置</h3><table><thead><tr><th>属性</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td>padding-left</td><td style="text-align:left;">左内边距</td></tr><tr><td>padding-right</td><td style="text-align:left;">右内边距</td></tr><tr><td>padding-top</td><td style="text-align:left;">上内边距</td></tr><tr><td>padding-bottom</td><td style="text-align:left;">下内边距</td></tr></tbody></table><p>当我们给盒子指定padding值之后， 发生了2件事情：</p><ol><li>内容和边框 有了距离，添加了内边距。</li><li>盒子会变大了。</li></ol><p><strong>注意： 后面跟几个数值表示的意思是不一样的。</strong></p><p>我们分开写有点麻烦，我们可以不可以简写呢？</p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>1个值</td><td>padding：上下左右内边距;</td></tr><tr><td>2个值</td><td>padding: 上下内边距 左右内边距 ；</td></tr><tr><td>3个值</td><td>padding：上内边距 左右内边距 下内边距；</td></tr><tr><td>4个值</td><td>padding: 上内边距 右内边距 下内边距 左内边距 ；</td></tr></tbody></table><p><strong>课堂一练：</strong></p><p>请写出如下内边距：</p><ol><li>要求盒子有一个左边内边距是 5像素</li><li>要求简写的形式写出 一个盒子上下是 25像素 左右是15像素。</li><li>要求简写的形式写出 一个盒子 上内边距是 12像素 下内边距是 0 左内边距是 25像素 右内边距是 10像素</li></ol><h3 id="_4-3-课堂案例-新浪导航" tabindex="-1"><a class="header-anchor" href="#_4-3-课堂案例-新浪导航" aria-hidden="true">#</a> 4.3 课堂案例： 新浪导航</h3><p>新浪导航栏的核心就是因为里面的字数不一样多，所以我们不方便给宽度，还是给padding ，撑开盒子的。</p><h3 id="_4-4-内盒尺寸计算-元素实际大小" tabindex="-1"><a class="header-anchor" href="#_4-4-内盒尺寸计算-元素实际大小" aria-hidden="true">#</a> 4.4 内盒尺寸计算（元素实际大小）</h3><ul><li><p>宽度</p><p>Element Height = content height + padding + border （Height为内容高度）</p></li><li><p>高度</p><p>Element Width = content width + padding + border （Width为内容宽度）</p></li><li><p>盒子的实际的大小 = 内容的宽度和高度 + 内边距 + 边框</p></li></ul><h3 id="_4-5-内边距产生的问题" tabindex="-1"><a class="header-anchor" href="#_4-5-内边距产生的问题" aria-hidden="true">#</a> 4.5 内边距产生的问题</h3><ul><li><p>问题</p><p>会撑大原来的盒子</p></li><li><p>解决：</p><p>通过给设置了宽高的盒子，减去相应的内边距的值，维持盒子原有的大小</p></li></ul><p><strong>课堂一练</strong></p><ol><li>一个盒子宽度为100， padding为 10， 边框为5像素，问这个盒子实际的宽度的是（）</li></ol><ul><li><p>[x] (A) 130</p></li><li><p>[ ] (B) 135</p></li><li><p>[ ] (C) 125</p></li><li><p>[ ] (D) 115</p><p>100 + 20 + 10</p></li></ul><ol start="2"><li>关于根据下列代码计算 盒子宽高下列说法正确的是（）</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>

		<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>

         <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>

		<span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000000<span class="token punctuation">;</span>

		<span class="token property">border-top</span><span class="token punctuation">:</span> 5px solid blue<span class="token punctuation">;</span>

		<span class="token property">padding</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>

		<span class="token property">padding-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>

		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>[ ] (A) 宽度为200px 高度为200px</li><li>[x] (B) 宽度为352px 高度为306px</li><li>[ ] (C) 宽度为302px 高度为307px</li><li>[ ] (D) 宽度为302px 高度为252px</li></ul><p>w 200 + 150 + 2 = 352</p><p>h 200 + 100 + 6 = 306</p><h3 id="_4-6-padding不影响盒子大小情况" tabindex="-1"><a class="header-anchor" href="#_4-6-padding不影响盒子大小情况" aria-hidden="true">#</a> 4.6 padding不影响盒子大小情况</h3><blockquote><p>如果没有给一个盒子指定宽度， 此时，如果给这个盒子指定padding， 则不会撑开盒子。</p></blockquote><h2 id="_5-外边距-margin" tabindex="-1"><a class="header-anchor" href="#_5-外边距-margin" aria-hidden="true">#</a> 5. 外边距（margin）</h2><h3 id="_5-1-外边距" tabindex="-1"><a class="header-anchor" href="#_5-1-外边距" aria-hidden="true">#</a> 5.1 外边距</h3><p>​ margin属性用于设置外边距。 margin就是控制<strong>盒子和盒子之间的距离</strong></p><h3 id="_5-2-设置" tabindex="-1"><a class="header-anchor" href="#_5-2-设置" aria-hidden="true">#</a> 5.2 设置：</h3><table><thead><tr><th>属性</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td>margin-left</td><td style="text-align:left;">左外边距</td></tr><tr><td>margin-right</td><td style="text-align:left;">右外边距</td></tr><tr><td>margin-top</td><td style="text-align:left;">上外边距</td></tr><tr><td>margin-bottom</td><td style="text-align:left;">下外边距</td></tr></tbody></table><p>margin值的简写 （复合写法）代表意思 跟 padding 完全相同。</p><h3 id="_5-3-块级盒子水平居中" tabindex="-1"><a class="header-anchor" href="#_5-3-块级盒子水平居中" aria-hidden="true">#</a> 5.3 块级盒子水平居中</h3><ul><li>可以让一个块级盒子实现水平居中必须： <ul><li>盒子必须指定了宽度（width）</li><li>然后就给<strong>左右的外边距都设置为auto</strong>，</li></ul></li></ul><p>实际工作中常用这种方式进行网页布局，示例代码如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.header</span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span>960px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常见的写法，以下下三种都可以。</p><ul><li>margin-left: auto; margin-right: auto;</li><li>margin: auto;</li><li>margin: 0 auto;</li></ul><h3 id="_5-4-文字居中和盒子居中区别" tabindex="-1"><a class="header-anchor" href="#_5-4-文字居中和盒子居中区别" aria-hidden="true">#</a> 5.4 文字居中和盒子居中区别</h3><ol><li>盒子内的文字水平居中是 text-align: center, 而且还可以让 行内元素和行内块居中对齐</li><li>块级盒子水平居中 左右margin 改为 auto</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/*  文字 行内元素 行内块元素水平居中 */</span>
<span class="token property">margin</span><span class="token punctuation">:</span> 10px auto<span class="token punctuation">;</span>  <span class="token comment">/* 块级盒子水平居中  左右margin 改为 auto 就阔以了 上下margin都可以 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-插入图片和背景图片区别" tabindex="-1"><a class="header-anchor" href="#_5-5-插入图片和背景图片区别" aria-hidden="true">#</a> 5.5 插入图片和背景图片区别</h3><ol><li>插入图片 我们用的最多 比如产品展示类 移动位置只能靠盒模型 padding margin</li><li>背景图片我们一般用于小图标背景 或者 超大背景图片 背景图片 只能通过 background-position</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">img</span> <span class="token punctuation">{</span>  
		<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token comment">/* 插入图片更改大小 width 和 height */</span>
		<span class="token property">height</span><span class="token punctuation">:</span> 210px<span class="token punctuation">;</span>
		<span class="token property">margin-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token comment">/* 插入图片更改位置 可以用margin 或padding  盒模型 */</span>
		<span class="token property">margin-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token comment">/* 插入当图片也是一个盒子 */</span>
	<span class="token punctuation">}</span>

 <span class="token selector">div</span> <span class="token punctuation">{</span>
		<span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
		<span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
		<span class="token property">border</span><span class="token punctuation">:</span> 1px solid purple<span class="token punctuation">;</span>
		<span class="token property">background</span><span class="token punctuation">:</span> #fff <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/sun.jpg<span class="token punctuation">)</span></span> no-repeat<span class="token punctuation">;</span>
		<span class="token property">background-position</span><span class="token punctuation">:</span> 30px 50px<span class="token punctuation">;</span> <span class="token comment">/* 背景图片更改位置 我用 background-position */</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-清除元素的默认内外边距-重要" tabindex="-1"><a class="header-anchor" href="#_5-6-清除元素的默认内外边距-重要" aria-hidden="true">#</a> 5.6 清除元素的默认内外边距(重要)</h3><p>为了更灵活方便地控制网页中的元素，制作网页时，我们需要将元素的默认内外边距清除</p><p>代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
   <span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>         <span class="token comment">/* 清除内边距 */</span>
   <span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>          <span class="token comment">/* 清除外边距 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ul><li>行内元素为了照顾兼容性， 尽量只设置左右内外边距， 不要设置上下内外边距。</li></ul><h3 id="_5-7-外边距合并" tabindex="-1"><a class="header-anchor" href="#_5-7-外边距合并" aria-hidden="true">#</a> 5.7 外边距合并</h3><p>使用margin定义块元素的<strong>垂直外边距</strong>时，可能会出现外边距的合并。</p><h4 id="_1-相邻块元素垂直外边距的合并" tabindex="-1"><a class="header-anchor" href="#_1-相邻块元素垂直外边距的合并" aria-hidden="true">#</a> (1). 相邻块元素垂直外边距的合并</h4><ul><li>当上下相邻的两个块元素相遇时，如果上面的元素有下外边距margin-bottom</li><li>下面的元素有上外边距margin-top，则他们之间的垂直间距不是margin-bottom与margin-top之和</li><li><strong>取两个值中的较大者</strong>这种现象被称为相邻块元素垂直外边距的合并（也称外边距塌陷）。</li></ul><p><strong>解决方案：尽量给只给一个盒子添加margin值</strong>。</p><h4 id="_2-嵌套块元素垂直外边距的合并-塌陷" tabindex="-1"><a class="header-anchor" href="#_2-嵌套块元素垂直外边距的合并-塌陷" aria-hidden="true">#</a> (2). 嵌套块元素垂直外边距的合并（塌陷）</h4><ul><li>对于两个嵌套关系的块元素，如果父元素没有上内边距及边框</li><li>父元素的上外边距会与子元素的上外边距发生合并</li><li>合并后的外边距为两者中的较大者</li></ul><p><strong>解决方案：</strong></p><ol><li>可以为父元素定义上边框。</li><li>可以为父元素定义上内边距</li><li>可以为父元素添加overflow:hidden。</li></ol><p>还有其他方法，比如浮动、固定、绝对定位的盒子不会有问题，后面咱们再总结。。。</p><h2 id="_6-盒子模型布局稳定性" tabindex="-1"><a class="header-anchor" href="#_6-盒子模型布局稳定性" aria-hidden="true">#</a> 6. 盒子模型布局稳定性</h2><ul><li><p>学习完盒子模型，内边距和外边距，什么情况下用内边距，什么情况下用外边距？</p><ul><li>大部分情况下是可以混用的。 就是说，你用内边距也可以，用外边距也可以。 你觉得哪个方便，就用哪个。</li></ul></li></ul><p>我们根据稳定性来分，建议如下：</p><p>按照 优先使用 宽度 （width） 其次 使用内边距（padding） 再次 外边距（margin）。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  width &gt;  padding  &gt;   margin   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>原因： <ul><li>margin 会有外边距合并 还有 ie6下面margin 加倍的bug（讨厌）所以最后使用。</li><li>padding 会影响盒子大小， 需要进行加减计算（麻烦） 其次使用。</li><li>width 没有问题（嗨皮）我们经常使用宽度剩余法 高度剩余法来做。</li></ul></li></ul><h2 id="_7-ps基本操作以及常用快捷键" tabindex="-1"><a class="header-anchor" href="#_7-ps基本操作以及常用快捷键" aria-hidden="true">#</a> 7. ps基本操作以及常用快捷键：</h2><p>因为网页美工大部分效果图都是利用ps 来做的，所以，以后我们大部分切图工作都是在ps里面完成。</p><ul><li>文件--打开 -- 可以打开 我们要测量的图片</li><li>ctrl+r 可以打开标尺 或者 视图 -- 标尺</li><li>右击标尺， 把里面的单位改为 像素</li><li>ctrl+ 加号 键 可以 放大 视图 ctrl+ 减号 缩小视图</li><li>按住空格键， 鼠标可以 变成小手 ，拖动 ps 视图</li><li>用选区 拖动 可以 测量 大小</li><li>ctrl+ d 可以取消选区 或者旁边空白处点击一下也可以取消选区</li></ul><h2 id="_8-综合案例" tabindex="-1"><a class="header-anchor" href="#_8-综合案例" aria-hidden="true">#</a> 8. 综合案例</h2><h4 id="去掉列表默认的样式" tabindex="-1"><a class="header-anchor" href="#去掉列表默认的样式" aria-hidden="true">#</a> 去掉列表默认的样式</h4><p>无序和有序列表前面默认的列表样式，在不同浏览器显示效果不一样，而且也比较难看，所以，我们一般上来就直接去掉这些列表样式就行了。 代码如下</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">li</span> <span class="token punctuation">{</span> <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_9-今日总结" tabindex="-1"><a class="header-anchor" href="#_9-今日总结" aria-hidden="true">#</a> 9. 今日总结</h2><h1 id="拓展" tabindex="-1"><a class="header-anchor" href="#拓展" aria-hidden="true">#</a> 拓展@</h1><p>以下我们讲的CSS3部分新属性， 但是我们遵循的原则是，以下内容，不会影响我们页面布局， 只是样式更好看了而已。</p><h2 id="_1-圆角边框-css3" tabindex="-1"><a class="header-anchor" href="#_1-圆角边框-css3" aria-hidden="true">#</a> 1.圆角边框(CSS3)</h2><ul><li>语法：</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-radius</span><span class="token punctuation">:</span>length<span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>其中每一个值可以为 数值或百分比的形式。</p></li><li><p>技巧： 让一个正方形 变成圆圈</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>border-radius: 50%;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><ul><li>以上效果图矩形的圆角， 就不要用 百分比了，因为百分比会是表示高度和宽度的一半。</li><li>而我们这里矩形就只用 用 高度的一半就好了。精确单位。</li></ul><h2 id="_2-盒子阴影-css3" tabindex="-1"><a class="header-anchor" href="#_2-盒子阴影-css3" aria-hidden="true">#</a> 2. 盒子阴影(CSS3)</h2><ul><li>语法:</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-shadow</span><span class="token punctuation">:</span>水平阴影 垂直阴影 模糊距离（虚实）  阴影尺寸（影子大小）  阴影颜色  内/外阴影；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>前两个属性是必须写的。其余的可以省略。</li><li>外阴影 (outset) 是默认的 但是不能写 想要内阴影可以写 inset</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
			<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
			<span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
			<span class="token property">border</span><span class="token punctuation">:</span> 10px solid red<span class="token punctuation">;</span>
			<span class="token comment">/* box-shadow: 5px 5px 3px 4px rgba(0, 0, 0, .4);  */</span>
			<span class="token comment">/* box-shadow:水平位置 垂直位置 模糊距离 阴影尺寸（影子大小） 阴影颜色  内/外阴影； */</span>
			<span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 15px 30px  <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .4<span class="token punctuation">)</span><span class="token punctuation">;</span>
			
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="css书写规范" tabindex="-1"><a class="header-anchor" href="#css书写规范" aria-hidden="true">#</a> CSS书写规范</h1><p>开始就形成良好的书写规范，是你专业的开始。</p><h2 id="空格规范" tabindex="-1"><a class="header-anchor" href="#空格规范" aria-hidden="true">#</a> 空格规范</h2><p>【强制】 选择器 与 { 之间必须包含空格。</p><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.selector</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>【强制】 属性名 与之后的 : 之间不允许包含空格， : 与 属性值 之间必须包含空格。</p><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="选择器规范" tabindex="-1"><a class="header-anchor" href="#选择器规范" aria-hidden="true">#</a> 选择器规范</h2><p>【强制】 并集选择器，每个选择器声明必须独占一行。</p><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/* good */
.post,
.page,
.comment {
    line-height: 1.5;
}


/* bad */
.post, .page, .comment {
    line-height: 1.5;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【建议】 一般情况情况下，选择器的嵌套层级应不大于 3 级，位置靠后的限定条件应尽可能精确。</p><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* good */</span>
<span class="token selector">#username input</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.comment .avatar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">/* bad */</span>
<span class="token selector">.page .header .login  input</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.comment div *</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性规范" tabindex="-1"><a class="header-anchor" href="#属性规范" aria-hidden="true">#</a> 属性规范</h2><p>【强制】 属性定义必须另起一行。</p><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* good */</span>
<span class="token selector">.selector</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* bad */</span>
<span class="token selector">.selector</span> <span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【强制】 属性定义后必须以分号结尾。</p><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* good */</span>
<span class="token selector">.selector</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* bad */</span>
<span class="token selector">.selector</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p>`,141),l=[i];function p(d,c){return a(),s("div",null,l)}const u=n(t,[["render",p],["__file","01-盒子模型.html.vue"]]);export{u as default};
