import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-tt0ZouaX.js";const e={},p=t(`<p>​</p><h1 id="php简要札记" tabindex="-1"><a class="header-anchor" href="#php简要札记" aria-hidden="true">#</a> php简要札记</h1><hr><p>$$ 了解http的请求，有助于我们更加清楚页面请求和相应的过程到底发生了什么 $$</p><h2 id="_1-0-http协议" tabindex="-1"><a class="header-anchor" href="#_1-0-http协议" aria-hidden="true">#</a> 1.0 HTTP协议</h2><pre><code>关于协议
</code></pre><p>​ 对于应用层开发人员，接触最多的网络协议通常都是传输层的TCP，为什么这么说，因为再往上的应用层协议，如：HTTP、HTTPS、POP3、SMTP、RPC、FTP、TELNET等等都是基于TCP传输层协议。但对于IP协议，对于应用程序员来说更多的印象还是IP地址这个东西，实际上IP协议是位于TCP协议之下的网络层，对于应用层程序员来说很难直接接触</p><p>​ IP协议 ： IP的责任就是把数据从源传送到目的地。它不负责保证传送可靠性，流控制，包顺序和其它对于主机到主机协议来说很普通的服务</p><p>​ TCP协议：TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议</p><p>​ HTTP协议：HTTP 是基于 TCP/IP 协议的应用层协议。它不涉及数据包（packet）传输，主要规定了客户端和服务器之间的通信格式，默认使用80端口</p><h4 id="tcp协议的3次握手" tabindex="-1"><a class="header-anchor" href="#tcp协议的3次握手" aria-hidden="true">#</a> TCP协议的3次握手</h4><p>​ 在我们获得页面数据之前，客户端需要与服务器端进行三次握手的&quot;问候&quot;</p><p>​ 简单来说：</p><p>​ 1， 客户端向服务器发起问候，携带编号number</p><p>​ 2， 服务器如果收到客户端的问候，回复问候，携带其他编号number</p><p>​ 3，客户端确认连接成功，回复服务器收到返回的数据</p><p>​</p><p>为什么是3次握手？</p><p>​ 这个问题的本质是, 通信不可靠, 但是通信双发需要就某个问题达成一致. 而要解决这个问题, 无论你在消息中包含什么信息, 三次通信是理论上的最小值</p><p>​ 已失效的连接请求报文段的产生在这样一种情况下：</p><ul><li>client发出的第一个连接请求报文段并没有丢失，而是在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达server。</li><li>本来这是一个早已失效的报文段。但server收到此失效的连接请求报文段后，就误认为是client再次发出的一个新的连接请求。于是就向client发出确认报文段，同意建立连接。</li><li>假设不采用“三次握手”，那么只要server发出确认，新的连接就建立了。由于现在client并没有发出建立连接的请求，因此不会理睬server的确认，也不会向server发送数据。</li><li>但server却以为新的运输连接已经建立，并一直等待client发来数据。这样，server的很多资源就白白浪费掉了。</li><li>采用“三次握手”的办法可以防止上述现象发生。例如刚才那种情况，client不会向server的确认发出确认。server由于收不到确认，就知道client并没有要求建立连接</li></ul><h4 id="_4次分手怎么回事" tabindex="-1"><a class="header-anchor" href="#_4次分手怎么回事" aria-hidden="true">#</a> 4次分手怎么回事</h4><ul><li>TCP协议是一种面向连接的、可靠的、基于字节流的运输层通信协议。</li><li>TCP是全双工模式，这就意味着，当主机1发出FIN报文段时，只是表示主机1已经没有数据要发送了，主机1告诉主机2，它的数据已经全部发送完毕了；</li><li>但是，这个时候主机1还是可以接受来自主机2的数据；当主机2返回ACK报文段时，表示它已经知道主机1没有数据发送了，但是主机2还是可以发送数据到主机1的；</li><li>当主机2也发送了FIN报文段时，这个时候就表示主机2也没有数据要发送了，就会告诉主机1，我也没有数据要发送了，之后彼此就会愉快的中断这次TCP连接。</li><li>如果要正确的理解四次分手的原理，就需要了解四次分手过程中的状态变化</li></ul><hr><h2 id="_2-0-请求报文" tabindex="-1"><a class="header-anchor" href="#_2-0-请求报文" aria-hidden="true">#</a> 2.0 请求报文</h2><p>​ 在结束协议的连接之后，客户端向服务器正式发起请求</p><p>​ 发起请求的时候，需要具体介绍当前的请求情况，方便服务器做出快速响应</p><h4 id="请求报文的常见格式" tabindex="-1"><a class="header-anchor" href="#请求报文的常见格式" aria-hidden="true">#</a> 请求报文的常见格式</h4><p>​ <strong>请求报文包含 请求行--请求头--请求体</strong></p><h5 id="请求行" tabindex="-1"><a class="header-anchor" href="#请求行" aria-hidden="true">#</a> 请求行</h5><p>​ 请求方式 + 空格 + 请求路径 + 空格 + HTTP协议版本</p><p>​ =&gt; GET /demo.php HTTP/1.1</p><h5 id="请求头" tabindex="-1"><a class="header-anchor" href="#请求头" aria-hidden="true">#</a> 请求头</h5><table><thead><tr><th>键</th><th>值</th></tr></thead><tbody><tr><td>Host</td><td>请求的主机</td></tr><tr><td>Cache-Control</td><td>控制缓存(例如：max-age=60 缓存60秒)</td></tr><tr><td>Accept</td><td>客户端想要接收的文档类型，逗号分隔</td></tr><tr><td>User-Agent</td><td>标识什么客户端帮你发送的这次请求</td></tr><tr><td>Referer</td><td>这次请求的来源</td></tr><tr><td>Accept-Encoding</td><td>可以接受的压缩编码</td></tr><tr><td>Cookie</td><td>客户端本地的小票信息</td></tr></tbody></table><h5 id="请求体" tabindex="-1"><a class="header-anchor" href="#请求体" aria-hidden="true">#</a> 请求体</h5><p>​ 客户端需要向服务端发送的内容</p><ul><li>get请求，会把基本的参数拼接到url的后面，所以基本使用不上请求体</li><li>post请求使用请求体会比较频繁</li></ul><h4 id="get请求" tabindex="-1"><a class="header-anchor" href="#get请求" aria-hidden="true">#</a> get请求</h4><p>​ get请求没有请求体，因为都在url的问号后面</p><h4 id="post请求" tabindex="-1"><a class="header-anchor" href="#post请求" aria-hidden="true">#</a> post请求</h4><p>​ 如果上传文件的话</p><hr><h2 id="_3-0-响应报文" tabindex="-1"><a class="header-anchor" href="#_3-0-响应报文" aria-hidden="true">#</a> 3.0 响应报文</h2><p>​</p><h4 id="状态行-响应行-响应体" tabindex="-1"><a class="header-anchor" href="#状态行-响应行-响应体" aria-hidden="true">#</a> 状态行 - 响应行 - 响应体</h4><p>​ 响应体一般来说是HTML，也可以是css或者javascript</p><p>​ 注意：返回什么类型文件，就修改响应头里的响应类型</p><hr><h2 id="_4-0-请求样式文件" tabindex="-1"><a class="header-anchor" href="#_4-0-请求样式文件" aria-hidden="true">#</a> 4.0 请求样式文件</h2><h4 id="请求css文件" tabindex="-1"><a class="header-anchor" href="#请求css文件" aria-hidden="true">#</a> 请求css文件</h4><p>​ 虽然要请求的是css文件，但是link的是php文件</p><p>​ 由于php是后台文件，最终是在php中返回内容给浏览器，并且可以设置当前的文件类型</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string double-quoted-string">&quot;stylesheet&quot;</span> href<span class="token operator">=</span><span class="token string double-quoted-string">&quot;css.php&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 在css.php中书写的代码</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 设置响应头的类型</span>
  	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Content-Type:text/css;charset=utf-8;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;body{background:red;}&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="header方法发送重定向操作" tabindex="-1"><a class="header-anchor" href="#header方法发送重定向操作" aria-hidden="true">#</a> header方法发送重定向操作</h4><p>​ 页面跳转</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击重定向<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 在data.php中完成跳转</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 立马做出跳转</span>
  	<span class="token comment">// header(&quot;Location:01-getsmt.php&quot;);</span>
  
  	<span class="token comment">// 在指定的时间之后跳转</span>
  	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;refresh:3;url=01-getsmt.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="header方法实现下载功能" tabindex="-1"><a class="header-anchor" href="#header方法实现下载功能" aria-hidden="true">#</a> header方法实现下载功能</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 实现当前页面的自动下载</span>
  	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Content-Type:application/octet-stream&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 指定文件名称, 自动下载，设置下载名称</span>
	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Content-Disposition:attachment;filename=tmp.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置请求头制作图片防盗链" tabindex="-1"><a class="header-anchor" href="#设置请求头制作图片防盗链" aria-hidden="true">#</a> 设置请求头制作图片防盗链</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 获取请求报文数据</span>
  	<span class="token comment">// print_r(getallheaders());</span>
  
  	<span class="token variable">$refer</span> <span class="token operator">=</span> <span class="token function">getallheaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;Referer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$referer</span><span class="token punctuation">;</span> <span class="token comment">// http:127.0.0.1/day04/03-test.html</span>

	<span class="token comment">// 获取url中各个部分的值</span>
	<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$referer</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
		Array(
			[scheme] =&gt; http
			[host] =&gt; 127.0.0.1
			[path] =&gt; /day04/03-test.html
		)
	*/</span>

<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>​</p><h2 id="_5-0-http协议无状态" tabindex="-1"><a class="header-anchor" href="#_5-0-http协议无状态" aria-hidden="true">#</a> 5.0 HTTP协议无状态</h2><h4 id="http会话" tabindex="-1"><a class="header-anchor" href="#http会话" aria-hidden="true">#</a> HTTP会话</h4><p>​ 客户端打开与服务器的连接发出请求到服务器响应客户端请求的全过程称之为会话</p><h4 id="http无状态" tabindex="-1"><a class="header-anchor" href="#http无状态" aria-hidden="true">#</a> HTTP无状态</h4><p>​ HTTP协议，本来是进行共享多个计算机之间的文件而产生的文件传输协议</p><p>​ 而请求的时候，服务器没有记录当前的信息</p><p>​ 就比如，去火车站取票，刷身份证拿到票之后，整个会话结束，不会有任何记录</p><p>==============</p><p>​ 动态网站的出现，表单提交，购物车的DOM操作，付款的跳转...</p><p>​ 有了交互的需要，需要携带一些数据在不同页面之间跳转，无凭无据的，可如何是好</p><hr><h2 id="_6-0-cookie" tabindex="-1"><a class="header-anchor" href="#_6-0-cookie" aria-hidden="true">#</a> 6.0 Cookie</h2><h4 id="什么是cookie" tabindex="-1"><a class="header-anchor" href="#什么是cookie" aria-hidden="true">#</a> 什么是cookie</h4><h5 id="关于cookie的描述" tabindex="-1"><a class="header-anchor" href="#关于cookie的描述" aria-hidden="true">#</a> 关于cookie的描述</h5><ul><li>因为HTTP协议是无状态的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。在典型的网上购物场景中，用户浏览了几个页面，买了一盒饼干和两瓶饮料。最后结帐时，由于HTTP的无状态性，不通过额外的手段，服务器并不知道用户到底买了什么，所以Cookie就是用来绕开HTTP的无状态性的“额外手段”之一。服务器可以设置或读取Cookies中包含信息，借此维护用户跟服务器会话中的状态。</li><li>在刚才的购物场景中，当用户选购了第一项商品，服务器在向用户发送网页的同时，还发送了一段Cookie，记录着那项商品的信息。当用户访问另一个页面，浏览器会把Cookie发送给服务器，于是服务器知道他之前选购了什么。用户继续选购饮料，服务器就在原来那段Cookie里追加新的商品信息。结帐时，服务器读取发送来的Cookie就行了。</li><li>Cookie另一个典型的应用是当登录一个网站时，网站往往会请求用户输入用户名和密码，并且用户可以勾选“下次自动登录”。如果勾选了，那么下次访问同一网站时，用户会发现没输入用户名和密码就已经登录了。这正是因为前一次登录时，服务器发送了包含登录凭据（用户名加密码的某种加密形式）的Cookie到用户的硬盘上。第二次登录时，如果该Cookie尚未到期，浏览器会发送该Cookie，服务器验证凭据，于是不必输入用户名和密码就让用户登录了。</li></ul><h5 id="cookie小结" tabindex="-1"><a class="header-anchor" href="#cookie小结" aria-hidden="true">#</a> cookie小结</h5><p>​ cookie是一个文件，用来存储当前的一些信息和服务器保持交流</p><p>​ 在前端介绍的sessionStorage和localStorage也是类似的功能</p><table><thead><tr><th>内容</th><th>cookie</th><th>localStorage</th><th>sessionStorage</th></tr></thead><tbody><tr><td>生命周期</td><td>一般由服务器生成，可设置失效的时间，如果在浏览器端生成cookie，默认关闭浏览器后失效</td><td>除非被删除，否则永久保存</td><td>仅在当前会话下有效，关闭页面或者浏览器后被删除</td></tr><tr><td>数据大小</td><td>4k</td><td>20M</td><td>5M</td></tr><tr><td>与服务器端通信</td><td>携带在http请求头中，若保存cookie过多数据会带来性能问题</td><td>仅在客户端即浏览器中保存，不参与和服务器的通信</td><td>仅在客户端即浏览器中保存，不参与和服务器的通信</td></tr><tr><td>易用性</td><td>需要程序员自己封装</td><td>原生接口可以接受，亦可以再次封装来对obj和Arr有更好的支持</td><td>原生接口可以接受，亦可以再次封装来对obj和Arr有更好的支持</td></tr></tbody></table><h4 id="使用cookie" tabindex="-1"><a class="header-anchor" href="#使用cookie" aria-hidden="true">#</a> 使用cookie</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 创建cookie</span>
  	<span class="token comment">// setcookie(&quot;username&quot;, &quot;tylor&quot;);  // 可以在请求头中查看</span>
  
	<span class="token comment">// 判断是否拥有某个指定名称的cookie值 -- $_COOKIE</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;欢迎回来，朕的小仙女&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;大人头一回来，是打尖儿还是住店呀~&quot;</span><span class="token punctuation">;</span>
      	<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;tylor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ chrome： 设置 =&gt; 更多设置 =&gt; 内容设置 =&gt; cookie</p><p>​ 可以看到明文存储的cookie设置的值;</p><h5 id="cookie的参数" tabindex="-1"><a class="header-anchor" href="#cookie的参数" aria-hidden="true">#</a> cookie的参数</h5><p>​ cookie的有效期</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token comment">// 时间是秒, 时间参照php的默认起始时间(1970-1-1)</span>
    <span class="token comment">// setcookie(&quot;username&quot;, &quot;tylor&quot;, 100);</span>
    <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;tylor&quot;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 设置永久的时间</span>
	<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;tylor&quot;</span><span class="token punctuation">,</span> <span class="token constant">PHP_INT_MAX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ cookie的有效目录</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token comment">// 在不同的文件夹输出cookie中的键</span>
  	<span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token comment">// 通过path可以设置访问权限，参照网站根目录</span>
	<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;tylor&quot;</span><span class="token punctuation">,</span> <span class="token constant">PHP_INT_MAX</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;/day05/down&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 设置父级目录，子目录可以访问，设置子目录，上层不能访问  &quot;/&quot; 代表整站可以访问</span>
	<span class="token comment">// Domain: 域名  path： 路径   secure：只有在https这类安全的协议下才会发送</span>
	

	<span class="token comment">// 某网站中显示的cookie</span>
	<span class="token comment">// set-cookie: ds_user_id=3265153328; Domain=.instagram.com; expires=Wed, 13-Feb-2019 14:19:35 GMT; Max-Age=7776000; Path=/; Secure</span>

<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除cookie" tabindex="-1"><a class="header-anchor" href="#删除cookie" aria-hidden="true">#</a> 删除cookie</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 处理删除cookie的php文件</span>
  
  	<span class="token comment">// 1.0 怎么创建的就怎么删除的</span>
  	<span class="token comment">// setcookie(&quot;username&quot;, &quot;&quot;);  如果开始不是这样设置的，这样删除就不行</span>
  	<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token constant">PHP_INT_MAX</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;/day05/down&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;ok&quot;</span><span class="token punctuation">;</span>

	<span class="token comment">// 2.0 设置一个过期时间，也是可以删除的 </span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="关于cookie的缺陷" tabindex="-1"><a class="header-anchor" href="#关于cookie的缺陷" aria-hidden="true">#</a> 关于cookie的缺陷</h5><ul><li>Cookie会被附加在每个HTTP请求中，所以无形中增加了流量</li><li>由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题，除非用HTTPS</li><li>Cookie的大小限制在4KB左右，对于复杂的存储需求来说是不够用的</li></ul><h4 id="登录案例" tabindex="-1"><a class="header-anchor" href="#登录案例" aria-hidden="true">#</a> 登录案例</h4><p>​ 使用写好的表单文件, 在头部判断是否为post提交</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token comment">// 验证用户数据是否合法</span>
  		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;请输入用户名&quot;</span><span class="token punctuation">;</span>
          	<span class="token keyword">return</span><span class="token punctuation">;</span>
  		<span class="token punctuation">}</span>
  		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;请输入密码&quot;</span><span class="token punctuation">;</span>
          	<span class="token keyword">return</span><span class="token punctuation">;</span> 
  		<span class="token punctuation">}</span>
  
  		<span class="token comment">// 接收用户数据</span>
  		<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 		<span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  		<span class="token comment">// 读取文件，进行相应判断</span>
  		<span class="token variable">$dataArr</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;users.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  		<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$dataArr</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token comment">// 如果下面的条件满足，说明至少用户名是正确的</span>
          	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              	<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
              	<span class="token keyword">break</span><span class="token punctuation">;</span>
          	<span class="token punctuation">}</span>
  		<span class="token punctuation">}</span>
  		<span class="token comment">// 如果这里没有值，告诉用户用户名不存在</span>
  		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;用户名不存在&quot;</span><span class="token punctuation">;</span>
          	<span class="token keyword">return</span><span class="token punctuation">;</span>
  		<span class="token punctuation">}</span>
        <span class="token comment">// 能走到这里来，证明$user已经拿到了用户的值  </span>
  		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;密码输入错误&quot;</span><span class="token punctuation">;</span>
          	<span class="token keyword">return</span><span class="token punctuation">;</span>
  		<span class="token punctuation">}</span>
          
  		<span class="token comment">// 匹配成功跳转至主页，否则回到登录页</span>
  		<span class="token comment">// !!!!!   将登陆成功的数据，写入到cookie中</span>
  		<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;isLogin&quot;</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  		<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location:./main.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
  
  	<span class="token comment">// 判断是否为post提交</span>
  	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;REQUEST_METHOD&quot;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string double-quoted-string">&quot;POST&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
 
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 判断当前有没有定义全局成员</span>
  	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token delimiter important">?&gt;</span></span>
      	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert alert-danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="使用cookie进行判断" tabindex="-1"><a class="header-anchor" href="#使用cookie进行判断" aria-hidden="true">#</a> 使用cookie进行判断</h5><p>​ 在跳转的首页去判断用户是否之前登录过</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 约定好判断的名字是什么</span>
  	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isLogin&quot;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location:login.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="删除cookie值" tabindex="-1"><a class="header-anchor" href="#删除cookie值" aria-hidden="true">#</a> 删除cookie值</h5><p>​ 在点击退出登录的页面中，设置跳转到logout.php文件，在此文件中处理删除</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 在删除cookie的时候，要注意它是怎么添加的</span>
  	<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;isLogin&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 回去登录页面</span>
  	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location:login.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关于json的小补充" tabindex="-1"><a class="header-anchor" href="#关于json的小补充" aria-hidden="true">#</a> 关于JSON的小补充</h4><h5 id="json数据格式" tabindex="-1"><a class="header-anchor" href="#json数据格式" aria-hidden="true">#</a> JSON数据格式</h5><p>​ JSON数据格式目前是使用的最多的，用来传递大量数据的文件</p><div class="language-JSON line-numbers-mode" data-ext="JSON"><pre class="language-JSON"><code>[
  	{
      	&quot;title&quot; : &quot;《毒液》&quot;,
      	&quot;director&quot; : &quot;tylor swift&quot;,
      	&quot;actors&quot; : &quot;Kobe Bryent&quot;,
      	&quot;time&quot; : &quot;2020-12-12&quot;,
      	&quot;src&quot; : &quot;./upload/xxx.avi&quot;
  	},
  	{
      	&quot;title&quot; : &quot;《觉醒》&quot;,
      	&quot;director&quot; : &quot;王家卫&quot;,
      	&quot;actors&quot; : &quot;Lebron james&quot;,
      	&quot;time&quot; : &quot;2019-1-14&quot;,
      	&quot;src&quot; : &quot;./upload/xxx.avi&quot;
  	}
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="json的特点" tabindex="-1"><a class="header-anchor" href="#json的特点" aria-hidden="true">#</a> JSON的特点</h5><ul><li>在json格式的文件中，不允许写任何的注释</li><li>属性和值，必须要使用双引号包含，值为数值或者非字符，没有undefined</li><li>对应关系 <ul><li>对象 =&gt; { } 后期可以将其转换为一个对象</li><li>数组 =&gt; [ ] 后期可以将其转换为一个数组</li></ul></li><li>单个json的数据用对象表示，多个就是上面见到的数组的格式，这种数据类型以后会经常见到</li></ul><h5 id="json的方法" tabindex="-1"><a class="header-anchor" href="#json的方法" aria-hidden="true">#</a> JSON的方法</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 要使用JSON里面的数据，首先要去读取数据</span>
  	<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;movie.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 这里见到的数组其实是个字符串</span>
	<span class="token comment">/*
		[
            {
                &quot;title&quot; : &quot;《毒液》&quot;,
                &quot;director&quot; : &quot;tylor swift&quot;,
                &quot;actors&quot; : &quot;Kobe Bryent&quot;,
                &quot;time&quot; : &quot;2020-12-12&quot;,
                &quot;src&quot; : &quot;./upload/xxx.avi&quot;
            },
            {
                &quot;title&quot; : &quot;《觉醒》&quot;,
                &quot;director&quot; : &quot;王家卫&quot;,
                &quot;actors&quot; : &quot;Lebron james&quot;,
                &quot;time&quot; : &quot;2019-1-14&quot;,
                &quot;src&quot; : &quot;./upload/xxx.avi&quot;
            }
        ]
	*/</span>
	
  	<span class="token comment">// 读取出的数据，需要转换为最终需要的数据  数组</span>
	<span class="token comment">// ！！！ json_encode()	</span>
	<span class="token comment">// 可以将php数组或者对象转换为json格式的字符串</span>
	
	<span class="token comment">// ！！！ json_decode()</span>
	<span class="token comment">/* 可以将json格式的字符串转换为数组或者对象，
			- 如果发现json格式的数组以中括号包裹，就可以将字符串转换为数组
            - 如果发现json格式的数组以大括号包裹，就可以将字符串转换为对象
    */</span>
	<span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">/*
		Array(
			[0] =&gt; stdclass object (
				[title] =&gt; 《毒液》,
                [director] =&gt; tylor swift,
                [actors] =&gt; Kobe Bryent,
                [time] =&gt; 2020-12-12,
                [src] =&gt; ./upload/xxx.avi
			)
			[1] =&gt; stdclass object (
				[title] : 《觉醒》,
                [director] : 王家卫,
                [actors] : Lebron james,
                [time] : 2019-1-14,
                [src] : [./upload/xxx.avi]
			)
		)
	*/</span>
	<span class="token comment">// 这里多加一个true代表设置为数组，不然设置为一个对象</span>
	<span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


	<span class="token variable">$arr2</span> <span class="token operator">=</span> <span class="token keyword">Array</span><span class="token punctuation">(</span>
    	<span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;tylor&quot;</span><span class="token punctuation">,</span>
      	<span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">32</span><span class="token punctuation">,</span>
      	<span class="token string double-quoted-string">&quot;gender&quot;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 转换为json格式的字符串</span>
	<span class="token variable">$str2</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$arr2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$str2</span><span class="token punctuation">;</span>
	<span class="token comment">/* {
			&quot;name&quot; : &quot;tylor&quot;,
			&quot;age&quot; : &quot;20&quot;,
			&quot;gender&quot; : true
		}
	*/</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-0-session" tabindex="-1"><a class="header-anchor" href="#_7-0-session" aria-hidden="true">#</a> 7.0 Session</h2><h4 id="session和cookie的区别" tabindex="-1"><a class="header-anchor" href="#session和cookie的区别" aria-hidden="true">#</a> session和cookie的区别</h4><ul><li>session 保存在服务器，客户端不知道其中的信息；cookie 保存在客户端，服务器能够知道其中的信息</li><li>session 中保存的是对象，cookie 中保存的是字符串</li><li>session 不能区分路径，同一个用户在访问一个网站期间，所有的session在任何地方都可以访问到。而 cookie 中如果设置了路径参数，那么同一个网站不同路径下的 cookie 互相是不可以访问的</li><li>cookie 不是很安全，本人可以分析存放在本地的 COOKIE 并进行 COOKIE欺骗</li><li>session 会在一定时间内保存在服务器上。当访问增多，会占用你服务器的性能。考虑到减轻服务器性能方面，应该使用 COOKIE</li><li>单个 cookie 保存的数据不能超过 4k ，很多浏览器都限制一个站点最多保存 20 个 cookie</li><li>session 是通过 cookie来工作的</li></ul><h4 id="在php文件中设置session" tabindex="-1"><a class="header-anchor" href="#在php文件中设置session" aria-hidden="true">#</a> 在php文件中设置session</h4><p>​ 要开启session的功能，才能使用session</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// !!! php中默认不能使用session功能，如果需要使用则需要手动设置</span>
	<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">/*
		1, 在服务器端动态生成一个sessionID
		2, 在服务器端动态生成一个可以存放本次会话数据的文件，文件名以sess_sessionID构成
		3, 通过相应头动态设置cookie， 在cookie中存放了本次会话所生成的sessionID
	*/</span>
  
  	<span class="token comment">// 创建session  使用超全局变量 $_SESSION[&quot;name&quot;] = value;</span>
  	<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">Array</span><span class="token punctuation">(</span>
							<span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;dilireba&quot;</span><span class="token punctuation">,</span>
  							<span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">25</span>
						<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="发起请求过程" tabindex="-1"><a class="header-anchor" href="#发起请求过程" aria-hidden="true">#</a> 发起请求过程</h5><ul><li>第一次向服务器发起请求不会存在这些参数</li><li>服务器创建sessionID存储对应的内容</li><li>服务器返回参数在cookie中</li><li>客户端通过返回回来的cookie的值，继续请求</li><li>服务器根据cookie中sessionID的值找到对应文件处理相关操作</li></ul><h5 id="文件存放位置" tabindex="-1"><a class="header-anchor" href="#文件存放位置" aria-hidden="true">#</a> 文件存放位置</h5><p>C:\\phpStudy\\PHPTutorial\\tmp\\tmp</p><p>修改配置文件</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 搜索 session.auto_start   将原本的0改为1即可</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="session的基本操作" tabindex="-1"><a class="header-anchor" href="#session的基本操作" aria-hidden="true">#</a> session的基本操作</h4><h5 id="读取session的值" tabindex="-1"><a class="header-anchor" href="#读取session的值" aria-hidden="true">#</a> 读取session的值</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
 	<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="删除session的值" tabindex="-1"><a class="header-anchor" href="#删除session的值" aria-hidden="true">#</a> 删除session的值</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  	<span class="token comment">// 删除一个session的值</span>
	<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 清空session所有的值</span>
	<span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token comment">// 销毁session文件</span>
	<span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="登录案例-1" tabindex="-1"><a class="header-anchor" href="#登录案例-1" aria-hidden="true">#</a> 登录案例</h4><h5 id="步骤1-将原先设置cookie的地方改写为session" tabindex="-1"><a class="header-anchor" href="#步骤1-将原先设置cookie的地方改写为session" aria-hidden="true">#</a> 步骤1：将原先设置cookie的地方改写为session</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token operator">...</span>
  
  		<span class="token comment">// 匹配成功跳转至主页，否则回到登录页</span>
  		<span class="token comment">/* 
  			!!!!!   将登陆成功的数据，写入到cookie中
  			setcookie(&quot;isLogin&quot;, true);
  		*/</span>
  		<span class="token comment">// 写入session数据</span>
  		<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  		<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">Array</span><span class="token punctuation">(</span>
								<span class="token string double-quoted-string">&quot;username&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  								<span class="token string double-quoted-string">&quot;userpwd&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  								<span class="token string double-quoted-string">&quot;isLogin&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;yes&quot;</span>
							<span class="token punctuation">)</span><span class="token punctuation">;</span>
  		<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location:./main.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  	<span class="token operator">...</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤2-在main文件中判断" tabindex="-1"><a class="header-anchor" href="#步骤2-在main文件中判断" aria-hidden="true">#</a> 步骤2：在main文件中判断</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// 判断是否写入了session</span>
  	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isLogin&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;yes&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location:login.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤3-退出登录" tabindex="-1"><a class="header-anchor" href="#步骤3-退出登录" aria-hidden="true">#</a> 步骤3：退出登录</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// 删除session</span>
  	<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 回去登录页面</span>
  	<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location:login.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>区别</th><th>cookie</th><th>session</th></tr></thead><tbody><tr><td>存储位置</td><td>浏览器</td><td>服务器</td></tr><tr><td>浏览器携带的数据量</td><td>多</td><td>少（只携带session-id）</td></tr><tr><td>存储的数据类型</td><td>只能是字符串</td><td>任意类型</td></tr><tr><td>安全性</td><td>较低</td><td>较高</td></tr><tr><td>默认的有效路径</td><td>当前路径及其子路径</td><td>整站有效</td></tr><tr><td>数据的传输量</td><td>有限制4k，不能超过20个</td><td>无限制</td></tr></tbody></table><hr><h2 id="_8-0-mysql" tabindex="-1"><a class="header-anchor" href="#_8-0-mysql" aria-hidden="true">#</a> 8.0 MySQL</h2><h4 id="什么是数据库" tabindex="-1"><a class="header-anchor" href="#什么是数据库" aria-hidden="true">#</a> 什么是数据库</h4><p>​ 存储数据的仓库，按照特定的方式来存储数据</p><p>​ txt =&gt; json =&gt; 数据库</p><ul><li>前两者存储量小，不利维护，不利管理，不利更新</li><li>数据库主要逻辑 （增删查改）CRUD</li></ul><h4 id="如何操作数据库" tabindex="-1"><a class="header-anchor" href="#如何操作数据库" aria-hidden="true">#</a> 如何操作数据库</h4><p>​ 第一种方式： 通过命令行工具创建数据库</p><p>​ 默认密码：root</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 数据库命令行常见操作</span>
mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>  <span class="token operator">--</span> 显示全部数据库
mysql<span class="token operator">&gt;</span> create database <span class="token operator">&lt;</span>db<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 创建一个指定名称的数据库
mysql<span class="token operator">&gt;</span> <span class="token keyword">use</span> <span class="token operator">&lt;</span>db<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 使用一个数据库，相当于进入指定的数据库
mysql<span class="token operator">&gt;</span> show tables<span class="token punctuation">;</span>  <span class="token operator">--</span> 显示当前数据库中有哪些表
mysql<span class="token operator">&gt;</span> create table <span class="token operator">&lt;</span>table<span class="token operator">-</span>name<span class="token operator">&gt;</span> <span class="token punctuation">(</span>id <span class="token keyword type-declaration">int</span><span class="token punctuation">,</span> name <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age <span class="token keyword type-declaration">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 创建一个指定名称的数据表，并添加 <span class="token number">3</span> 个列
mysql<span class="token operator">&gt;</span> desc <span class="token operator">&lt;</span>table<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 查看指定表结构
mysql<span class="token operator">&gt;</span> source <span class="token operator">.</span><span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>sql<span class="token operator">-</span>file<span class="token operator">.</span>sql  <span class="token operator">--</span> 执行本地 <span class="token constant">SQL</span> 文件中的 <span class="token constant">SQL</span> 语句
mysql<span class="token operator">&gt;</span> drop table <span class="token operator">&lt;</span>table<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 删除一个指定名称的数据表
mysql<span class="token operator">&gt;</span> drop database <span class="token operator">&lt;</span>db<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 删除一个指定名称的数据库
mysql<span class="token operator">&gt;</span> <span class="token keyword">exit</span><span class="token operator">|</span><span class="token class-name">quit</span><span class="token punctuation">;</span>  <span class="token operator">--</span> 退出数据库终端
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装可视化工具-navicat" tabindex="-1"><a class="header-anchor" href="#安装可视化工具-navicat" aria-hidden="true">#</a> 安装可视化工具-navicat</h4><h5 id="断网激活" tabindex="-1"><a class="header-anchor" href="#断网激活" aria-hidden="true">#</a> 断网激活</h5>`,154),o=[p];function i(l,c){return s(),a("div",null,o)}const r=n(e,[["render",i],["__file","04-php基础.html.vue"]]);export{r as default};
