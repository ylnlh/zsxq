import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,f as o}from"./app-hz3rNBT8.js";const e={},a=o(`<h1 id="定位-position" tabindex="-1"><a class="header-anchor" href="#定位-position" aria-hidden="true">#</a> 定位(position)</h1><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><ul><li><strong>理解</strong><ul><li>能说出为什么要用定位</li><li>能说出定位的4种分类</li><li>能说出四种定位的各自特点</li><li>能说出我们为什么常用子绝父相布局</li></ul></li><li><strong>应用</strong><ul><li>能写出淘宝轮播图布局</li></ul></li></ul><h2 id="_1-css-布局的三种机制" tabindex="-1"><a class="header-anchor" href="#_1-css-布局的三种机制" aria-hidden="true">#</a> 1. CSS 布局的三种机制</h2><blockquote><p>网页布局的核心 —— 就是<strong>用 CSS 来摆放盒子位置</strong>。</p></blockquote><p>CSS 提供了 <strong>3 种机制</strong>来设置盒子的摆放位置，分别是<strong>普通流</strong>、<strong>浮动</strong>和<strong>定位</strong>，其中：</p><ol><li><p><strong>普通流</strong>（<strong>标准流</strong>）</p></li><li><p><strong>浮动</strong></p><ul><li>让盒子从普通流中<strong>浮</strong>起来 —— <strong>让多个盒子(div)水平排列成一行</strong>。</li></ul></li><li><p><strong>定位</strong></p><ul><li>将盒子<strong>定</strong>在某一个<strong>位</strong>置 自由的漂浮在其他盒子的上面 —— CSS 离不开定位，特别是后面的 js 特效。</li></ul></li></ol><h2 id="_2-为什么使用定位" tabindex="-1"><a class="header-anchor" href="#_2-为什么使用定位" aria-hidden="true">#</a> 2. 为什么使用定位</h2><blockquote><p>我们先来看一个效果，同时思考一下<strong>用标准流或浮动能否实现类似的效果</strong>？</p></blockquote><p><strong>1. 小黄色块</strong>在图片上移动，<strong>吸引用户的眼球</strong>。</p><p><strong>2. 当我们滚动窗口的时候，盒子是固定屏幕某个位置的</strong></p><blockquote><p><strong>结论</strong>：要实现以上效果，<strong>标准流</strong>或<strong>浮动</strong>都无法快速实现</p></blockquote><p>一句话说出定位：</p><blockquote><p>将盒子<strong>定</strong>在某一个<strong>位</strong>置 自由的漂浮在其他盒子(包括标准流和浮动)的上面</p></blockquote><p>所以，我们脑海应该有三种布局机制的上下顺序</p><p>标准流在最底层 (海底) ------- 浮动 的盒子 在 中间层 (海面) ------- 定位的盒子 在 最上层 （天空）</p><h2 id="_3-定位详解" tabindex="-1"><a class="header-anchor" href="#_3-定位详解" aria-hidden="true">#</a> 3. 定位详解</h2><p>定位也是用来布局的，它有两部分组成：</p><blockquote><p><code>定位 = 定位模式 + 边偏移</code></p></blockquote><h3 id="_3-1-边偏移" tabindex="-1"><a class="header-anchor" href="#_3-1-边偏移" aria-hidden="true">#</a> 3.1 边偏移</h3><p>简单说， 我们定位的盒子，是通过边偏移来移动位置的。</p><p>在 CSS 中，通过 <code>top</code>、<code>bottom</code>、<code>left</code> 和 <code>right</code> 属性定义元素的<strong>边偏移</strong>：（方位名词）</p><table><thead><tr><th>边偏移属性</th><th style="text-align:left;">示例</th><th>描述</th></tr></thead><tbody><tr><td><code>top</code></td><td style="text-align:left;"><code>top: 80px</code></td><td><strong>顶端</strong>偏移量，定义元素相对于其父元素<strong>上边线的距离</strong>。</td></tr><tr><td><code>bottom</code></td><td style="text-align:left;"><code>bottom: 80px</code></td><td><strong>底部</strong>偏移量，定义元素相对于其父元素<strong>下边线的距离</strong>。</td></tr><tr><td><code>left</code></td><td style="text-align:left;"><code>left: 80px</code></td><td><strong>左侧</strong>偏移量，定义元素相对于其父元素<strong>左边线的距离</strong>。</td></tr><tr><td><code>right</code></td><td style="text-align:left;"><code>right: 80px</code></td><td><strong>右侧</strong>偏移量，定义元素相对于其父元素<strong>右边线的距离</strong></td></tr></tbody></table><p>定位的盒子有了边偏移才有价值。 一般情况下，凡是有定位地方必定有边偏移。</p><h3 id="_3-2-定位模式-position" tabindex="-1"><a class="header-anchor" href="#_3-2-定位模式-position" aria-hidden="true">#</a> 3.2 定位模式 (position)</h3><p>在 CSS 中，通过 <code>position</code> 属性定义元素的<strong>定位模式</strong>，语法如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器</span> <span class="token punctuation">{</span> <span class="token property">position</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>定位模式是有不同分类的，在不同情况下，我们用到不同的定位模式。</p><table><thead><tr><th>值</th><th style="text-align:center;">语义</th></tr></thead><tbody><tr><td><code>static</code></td><td style="text-align:center;"><strong>静态</strong>定位</td></tr><tr><td><code>relative</code></td><td style="text-align:center;"><strong>相对</strong>定位</td></tr><tr><td><code>absolute</code></td><td style="text-align:center;"><strong>绝对</strong>定位</td></tr><tr><td><code>fixed</code></td><td style="text-align:center;"><strong>固定</strong>定位</td></tr></tbody></table><h4 id="_3-2-1-静态定位-static-了解" tabindex="-1"><a class="header-anchor" href="#_3-2-1-静态定位-static-了解" aria-hidden="true">#</a> 3.2.1 静态定位(static) - 了解</h4><ul><li><strong>静态定位</strong>是元素的默认定位方式，无定位的意思。它相当于 border 里面的none， 不要定位的时候用。</li><li>静态定位 按照标准流特性摆放位置，它没有边偏移。</li><li>静态定位在布局时我们几乎不用的</li></ul><h4 id="_3-2-1-相对定位-relative-重要" tabindex="-1"><a class="header-anchor" href="#_3-2-1-相对定位-relative-重要" aria-hidden="true">#</a> 3.2.1 相对定位(relative) - 重要</h4><ul><li><strong>相对定位</strong>是元素<strong>相对</strong>于它 原来在标准流中的位置 来说的。（自恋型）</li></ul><p><strong>效果图</strong>：</p><p>相对定位的特点：（务必记住）</p><ul><li>相对于 自己原来在标准流中位置来移动的</li><li>原来<strong>在标准流的区域继续占有</strong>，后面的盒子仍然以标准流的方式对待它。</li></ul><h4 id="_3-2-3-绝对定位-absolute-重要" tabindex="-1"><a class="header-anchor" href="#_3-2-3-绝对定位-absolute-重要" aria-hidden="true">#</a> 3.2.3 绝对定位(absolute) - 重要</h4><p><strong>绝对定位</strong>是元素以带有定位的父级元素来移动位置 （拼爹型）</p><ol><li><p><strong>完全脱标</strong> —— 完全不占位置；</p></li><li><p><strong>父元素没有定位</strong>，则以<strong>浏览器</strong>为准定位（Document 文档）。</p></li><li><p><strong>父元素要有定位</strong></p><ul><li>将元素依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。</li></ul></li></ol><p>绝对定位的特点：（务必记住）</p><ul><li>绝对是以带有定位的父级元素来移动位置 （拼爹型） 如果父级都没有定位，则以浏览器文档为准移动位置</li><li>不保留原来的位置，完全是脱标的。</li></ul><p>因为绝对定位的盒子是拼爹的，所以要和父级搭配一起来使用。</p><h5 id="定位口诀-——-子绝父相" tabindex="-1"><a class="header-anchor" href="#定位口诀-——-子绝父相" aria-hidden="true">#</a> 定位口诀 —— 子绝父相</h5><p>刚才咱们说过，绝对定位，要和带有定位的父级搭配使用，那么父级要用什么定位呢？</p><p><strong>子绝父相</strong> —— <strong>子级</strong>是<strong>绝对</strong>定位，<strong>父级</strong>要用<strong>相对</strong>定位。</p><blockquote><p><strong>子绝父相</strong>是使用绝对定位的口诀，要牢牢记住！</p></blockquote><p><strong>疑问</strong>：为什么在布局时，<strong>子级元素</strong>使用<strong>绝对定位</strong>时，<strong>父级元素</strong>就要用<strong>相对定位</strong>呢？</p><p>观察下图，思考一下在布局时，<strong>左右两个方向的箭头图片</strong>以及<strong>父级盒子</strong>的定位方式。</p><p><strong>分析</strong>：</p><ol><li><strong>方向箭头</strong>叠加在其他图片上方，应该使用<strong>绝对定位</strong>，因为<strong>绝对定位完全脱标</strong>，完全不占位置。</li><li><strong>父级盒子</strong>应该使用<strong>相对定位</strong>，因为<strong>相对定位不脱标</strong>，后续盒子仍然以标准流的方式对待它。 <ul><li>如果父级盒子也使用<strong>绝对定位</strong>，会完全脱标，那么下方的<strong>广告盒子</strong>会上移，这显然不是我们想要的。</li></ul></li></ol><p><strong>结论</strong>：<strong>父级要占有位置，子级要任意摆放</strong>，这就是<strong>子绝父相</strong>的由来。</p><h4 id="_3-2-4-固定定位-fixed-重要" tabindex="-1"><a class="header-anchor" href="#_3-2-4-固定定位-fixed-重要" aria-hidden="true">#</a> 3.2.4 固定定位(fixed) - 重要</h4><p><strong>固定定位</strong>是<strong>绝对定位</strong>的一种特殊形式： （认死理型） 如果说绝对定位是一个矩形 那么 固定定位就类似于正方形</p><ol><li><strong>完全脱标</strong> —— 完全不占位置；</li><li>只认<strong>浏览器的可视窗口</strong> —— <code>浏览器可视窗口 + 边偏移属性</code> 来设置元素的位置； <ul><li>跟父元素没有任何关系；单独使用的</li><li>不随滚动条滚动。</li></ul></li></ol><blockquote><p>案例演练：固定定位案例。</p></blockquote><p><strong>提示</strong>：IE 6 等低版本浏览器不支持固定定位。</p><h2 id="_4-定位-position-的案例" tabindex="-1"><a class="header-anchor" href="#_4-定位-position-的案例" aria-hidden="true">#</a> 4. 定位(position)的案例</h2><h3 id="_4-1-哈根达斯" tabindex="-1"><a class="header-anchor" href="#_4-1-哈根达斯" aria-hidden="true">#</a> 4.1 哈根达斯</h3><p><strong>案例截图</strong>：</p><h4 id="哈根达斯分析" tabindex="-1"><a class="header-anchor" href="#哈根达斯分析" aria-hidden="true">#</a> 哈根达斯分析</h4><ol><li>一个大的 <code>div</code> 中包含 <code>3</code> 张图片；</li><li>大的 <code>div</code> 水平居中；</li><li><code>2</code> 张小图片<strong>重叠</strong>在<strong>广告</strong>图片上方 —— 脱标，不占位置，需要使用<strong>绝对定位</strong>；</li><li><code>2</code> 张小图片分别显示在<strong>左上角</strong>和<strong>右下角</strong> —— 需要<strong>使用边偏移确定准确位置</strong>。</li></ol><p><strong>案例小结</strong>：</p><ol><li><strong>子绝父相</strong> —— <strong>子元素</strong>使用<strong>绝对定位</strong>，<strong>父元素</strong>使用<strong>相对定位</strong>；</li><li><strong>与浮动的对比</strong>： <ul><li><strong>绝对定位</strong>：脱标，<strong>利用边偏移指定准确位置</strong>；</li><li><strong>浮动</strong>：脱标，不能指定准确位置，<strong>让多个块级元素在一行显示</strong>。</li></ul></li></ol><blockquote><p>课堂练习：模拟老师的随堂案例完成<strong>哈根达斯</strong>案例（5 分钟）。</p></blockquote><h3 id="_4-2-仿新浪头部和广告" tabindex="-1"><a class="header-anchor" href="#_4-2-仿新浪头部和广告" aria-hidden="true">#</a> 4.2 仿新浪头部和广告</h3><h4 id="新浪案例分析" tabindex="-1"><a class="header-anchor" href="#新浪案例分析" aria-hidden="true">#</a> 新浪案例分析</h4><ol><li>顶部图片<strong>固定</strong>在浏览器可视窗口顶部，不会随窗口一起滚动；</li><li>左右两侧的广告图片<strong>固定</strong>在浏览器可视窗口的左右两侧，不会随窗口一起滚动；</li><li>注意：<strong>底部的内容图片</strong>初始<strong>显示在顶部图片的下方</strong>，如何解决？</li></ol><h4 id="步骤-1-——-顶部图片和底部内容" tabindex="-1"><a class="header-anchor" href="#步骤-1-——-顶部图片和底部内容" aria-hidden="true">#</a> 步骤 1 —— 顶部图片和底部内容</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.top</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 注意：使用固定定位时，如果盒子中没有内容，需要指定宽度 */</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/top.png<span class="token punctuation">)</span></span> no-repeat top center<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 1002px<span class="token punctuation">;</span>
    <span class="token comment">/* 顶部的 44px 的 margin 可以让 box 显示在顶部图片下方 */</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 44px auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>：</p><ol><li>在使用固定定位时，如果盒子中没有内容，需要指定宽度</li><li>设置底部内容图片的<strong>顶部 <code>margin</code></strong>，可以让底部盒子初始显示在顶部图片的下方。</li></ol><h4 id="步骤-2-——-左右两侧广告" tabindex="-1"><a class="header-anchor" href="#步骤-2-——-左右两侧广告" aria-hidden="true">#</a> 步骤 2 —— 左右两侧广告</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.ad-left,
.ad-right</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.ad-left</span> <span class="token punctuation">{</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.ad-right</span> <span class="token punctuation">{</span>
    <span class="token property">right</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>：不要同时使用 <code>left</code> 和 <code>right</code> 和边偏移属性。</p><p><strong>案例小结</strong>：</p><ol><li><strong>固定定位</strong>的应用场景：<strong>固定在浏览器可视窗口某个位置的布局</strong>；</li><li>在使用固定和绝对定位时，如果盒子中没有内容，需要指定宽度（稍后就讲）。</li></ol><blockquote><p>课堂练习：模拟老师的随堂案例完成<strong>仿新浪头部和广告</strong>案例（5 分钟）。</p></blockquote><h2 id="_5-定位-position-的扩展" tabindex="-1"><a class="header-anchor" href="#_5-定位-position-的扩展" aria-hidden="true">#</a> 5. 定位(position)的扩展</h2><h3 id="_5-1-绝对定位的盒子居中" tabindex="-1"><a class="header-anchor" href="#_5-1-绝对定位的盒子居中" aria-hidden="true">#</a> 5.1 绝对定位的盒子居中</h3><blockquote><p><strong>注意</strong>：<strong>绝对定位/固定定位的盒子</strong>不能通过设置 <code>margin: auto</code> 设置<strong>水平居中</strong>。</p></blockquote><p>在使用<strong>绝对定位</strong>时要想实现水平居中，可以按照下图的方法：</p><ol><li><code>left: 50%;</code>：让<strong>盒子的左侧</strong>移动到<strong>父级元素的水平中心位置</strong>；</li><li><code>margin-left: -100px;</code>：让盒子<strong>向左</strong>移动<strong>自身宽度的一半</strong>。</li></ol><blockquote><p>案例演示：相对定位案例。</p></blockquote><h4 id="盒子居中定位示意图" tabindex="-1"><a class="header-anchor" href="#盒子居中定位示意图" aria-hidden="true">#</a> 盒子居中定位示意图</h4><blockquote><p>课堂练习：实现<strong>盒子左中、右中、中上、中下、中中定位</strong>（5 分钟）。</p></blockquote><h3 id="_5-2-堆叠顺序-z-index" tabindex="-1"><a class="header-anchor" href="#_5-2-堆叠顺序-z-index" aria-hidden="true">#</a> 5.2 堆叠顺序（z-index）</h3><p>在使用<strong>定位</strong>布局时，可能会<strong>出现盒子重叠的情况</strong>。</p><p>加了定位的盒子，默认<strong>后来者居上</strong>， 后面的盒子会压住前面的盒子。</p><p>应用 <code>z-index</code> 层叠等级属性可以<strong>调整盒子的堆叠顺序</strong>。如下图所示：</p><p><code>z-index</code> 的特性如下：</p><ol><li><strong>属性值</strong>：<strong>正整数</strong>、<strong>负整数</strong>或 <strong>0</strong>，默认值是 0，数值越大，盒子越靠上；</li><li>如果<strong>属性值相同</strong>，则按照书写顺序，<strong>后来居上</strong>；</li><li><strong>数字后面不能加单位</strong>。</li></ol><p><strong>注意</strong>：<code>z-index</code> 只能应用于<strong>相对定位</strong>、<strong>绝对定位</strong>和<strong>固定定位</strong>的元素，其他<strong>标准流</strong>、<strong>浮动</strong>和<strong>静态定位</strong>无效。</p><blockquote><p>案例演示：堆叠顺序。</p></blockquote><h3 id="_5-3-定位改变display属性" tabindex="-1"><a class="header-anchor" href="#_5-3-定位改变display属性" aria-hidden="true">#</a> 5.3 定位改变display属性</h3><p>前面我们讲过， display 是 显示模式， 可以改变显示模式有以下方式:</p><ul><li>可以用inline-block 转换为行内块</li><li>可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的）</li><li>绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。</li></ul><p>所以说， 一个行内的盒子，如果加了<strong>浮动</strong>、<strong>固定定位</strong>和<strong>绝对定位</strong>，不用转换，就可以给这个盒子直接设置宽度和高度等。</p><blockquote><p>完善新浪导航案例</p></blockquote><p><strong>同时注意：</strong></p><p>浮动元素、绝对定位(固定定位）元素的都不会触发外边距合并的问题。 （我们以前是用padding border overflow解决的）</p><p>也就是说，我们给盒子改为了浮动或者定位，就不会有垂直外边距合并的问题了。</p><h2 id="_6-综合演练-淘宝轮播图" tabindex="-1"><a class="header-anchor" href="#_6-综合演练-淘宝轮播图" aria-hidden="true">#</a> 6. 综合演练 - 淘宝轮播图</h2><h4 id="圆角矩形设置4个角" tabindex="-1"><a class="header-anchor" href="#圆角矩形设置4个角" aria-hidden="true">#</a> 圆角矩形设置4个角</h4><p>圆角矩形可以为4个角分别设置圆度， 但是是有顺序的</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>border-top-left-radius:20px;
border-top-right-radius:20px;
border-bottom-right-radius:20px;
border-bottom-left-radius:20px;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果4个角，数值相同</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></li></ul><p>border-radius: 15px;</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
* 里面数值不同，我们也可以按照简写的形式，具体格式如下:

~~~css
border-radius: 左上角 右上角  右下角  左下角;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还是遵循的顺时针。</p><h2 id="_7-定位小结" tabindex="-1"><a class="header-anchor" href="#_7-定位小结" aria-hidden="true">#</a> 7. 定位小结</h2><table><thead><tr><th>定位模式</th><th>是否脱标占有位置</th><th style="text-align:left;">移动位置基准</th><th>模式转换（行内块）</th><th>使用情况</th></tr></thead><tbody><tr><td>静态static</td><td>不脱标，正常模式</td><td style="text-align:left;">正常模式</td><td>不能</td><td>几乎不用</td></tr><tr><td>相对定位relative</td><td>不脱标，占有位置</td><td style="text-align:left;">相对自身位置移动</td><td>不能</td><td>基本单独使用</td></tr><tr><td>绝对定位absolute</td><td>完全脱标，不占有位置</td><td style="text-align:left;">相对于定位父级移动位置</td><td>能</td><td>要和定位父级元素搭配使用</td></tr><tr><td>固定定位fixed</td><td>完全脱标，不占有位置</td><td style="text-align:left;">相对于浏览器移动位置</td><td>能</td><td>单独使用，不需要父级</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li><strong>边偏移</strong>需要和<strong>定位模式</strong>联合使用，<strong>单独使用无效</strong>；</li><li><code>top</code> 和 <code>bottom</code> 不要同时使用；</li><li><code>left</code> 和 <code>right</code> 不要同时使用。</li></ol><h2 id="_8-学成网定位总结添加" tabindex="-1"><a class="header-anchor" href="#_8-学成网定位总结添加" aria-hidden="true">#</a> 8.学成网定位总结添加</h2><p>一个小技巧:</p><h2 id="_9-网页布局总结" tabindex="-1"><a class="header-anchor" href="#_9-网页布局总结" aria-hidden="true">#</a> 9. 网页布局总结</h2><p>一个完整的网页，有标准流 、 浮动 、 定位 一起完成布局的。每个都有自己的专门用法。</p><h4 id="_1-标准流" tabindex="-1"><a class="header-anchor" href="#_1-标准流" aria-hidden="true">#</a> 1). 标准流</h4><p>可以让盒子上下排列 或者 左右排列的</p><h4 id="_2-浮动" tabindex="-1"><a class="header-anchor" href="#_2-浮动" aria-hidden="true">#</a> 2). 浮动</h4><p>可以让多个块级元素一行显示 或者 左右对齐盒子 浮动的盒子就是按照顺序左右排列</p><h4 id="_3-定位" tabindex="-1"><a class="header-anchor" href="#_3-定位" aria-hidden="true">#</a> 3). 定位</h4><p>定位最大的特点是有层叠的概念，就是可以让多个盒子 前后 叠压来显示。 但是每个盒子需要测量数值。</p><p>​</p>`,124),r=[a];function i(d,l){return n(),s("div",null,r)}const g=t(e,[["render",i],["__file","01-定位.html.vue"]]);export{g as default};
