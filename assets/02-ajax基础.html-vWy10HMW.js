import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as p,f as s,a as n}from"./app-tt0ZouaX.js";const o={},e=s(`<h1 id="ajax简要札记" tabindex="-1"><a class="header-anchor" href="#ajax简要札记" aria-hidden="true">#</a> AJAX简要札记</h1><hr><h2 id="_1-0-jquery中的ajax" tabindex="-1"><a class="header-anchor" href="#_1-0-jquery中的ajax" aria-hidden="true">#</a> 1.0 jQuery中的ajax</h2><p>​ 如果对于上一次的封装还有一点点印象，那么对于jQuery中的ajax就能很快熟悉</p><p>​ 只是关于jQuery中的ajax，功能更多，使用更加高效和频繁</p><h4 id="关于使用jquery中的ajax" tabindex="-1"><a class="header-anchor" href="#关于使用jquery中的ajax" aria-hidden="true">#</a> 关于使用jQuery中的ajax</h4><p>​ 如果要使用自己封装的函数，那么需要引入自己封装的ajaxTools.js文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;./server/nav-json.php&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;&lt;li&gt;&quot;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;a href=&quot;#&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">+</span> <span class="token string">&#39;&quot; alt=&quot;&quot;&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;p&gt;&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">&#39;&lt;/p&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/a&gt;&#39;</span>
            		<span class="token operator">+</span> <span class="token string">&#39;&lt;/li&gt;&#39;</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    
		<span class="token punctuation">}</span>
        <span class="token comment">// 将生成的页面结构添加到dom元素中</span>
		document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>有意思的是，如果将自己封装的文件，替换成jquery-1.12.2.min.js文件，发现没任何不妥</code></p><p>​ 也就是说，jquery的使用方式跟上面是差不多的，只是jquery中，还可以在内部有更多的参数和功能，而如果在自己封装的文件上，加入再多的功能，对于难度上来讲是一个挑战，对于实际应用上来说没有必要</p>`,10),c=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"$.ajax({这里传入一个字面量对象})"),n("th",null,"参数说明")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("strong",null,"url")]),n("td",null,"接口地址")]),n("tr",null,[n("td",null,[n("strong",null,"type")]),n("td",null,"请求方式")]),n("tr",null,[n("td",null,"timeout"),n("td",null,"请求超时，单位是毫秒")]),n("tr",null,[n("td",null,[n("strong",null,"dataType")]),n("td",null,"服务器返回的格式, json / xml / jsonp")]),n("tr",null,[n("td",null,[n("strong",null,"data")]),n("td",null,"发送请求的数据")]),n("tr",null,[n("td",{"css-module":".code"},"beforeSend: fucntion()"),n("td",null,"请求发起前的调用")]),n("tr",null,[n("td",null,[n("strong",null,"success: fucntion() { ...code }")]),n("td",null,"成功响应后的调用")]),n("tr",null,[n("td",null,[n("strong",null,"error: fucntion() { ...code }")]),n("td",null,"错误响应时的调用，e参数为报错信息")]),n("tr",null,[n("td",{"css-module":".code"},"complete: fucntion()"),n("td",null,"响应完成时的调用")])])],-1),l=s(`<h5 id="完整的jquery调用" tabindex="-1"><a class="header-anchor" href="#完整的jquery调用" aria-hidden="true">#</a> 完整的jQuery调用</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;./server/nav-json.php&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//请求需要传递的参数</span>
    <span class="token comment">// 设置请求超时:单位为毫秒，如果服务器的响应时间超过指定的时候，请求失败</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 设置响应数据的格式  xml json text html script jsonp</span>
    <span class="token comment">// 发送请求之前的回调</span>
    <span class="token function-variable function">beforeSend</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 在这个回调函数中，如果return false,那么本次请求会中止</span>
        <span class="token comment">// return false;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//请求成功之后的回调</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token comment">// 请求失败之后的回调</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>statusText <span class="token operator">==</span> <span class="token string">&quot;timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;请求超时，请重试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 无论请求是成功还是失败都会执行的回调</span>
    <span class="token function-variable function">complete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;实现一些全局成员的释放，或者页面状态的重置....&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jquery中ajax的其他用法" tabindex="-1"><a class="header-anchor" href="#jquery中ajax的其他用法" aria-hidden="true">#</a> jQuery中ajax的其他用法</h4><h5 id="get-的使用" tabindex="-1"><a class="header-anchor" href="#get-的使用" aria-hidden="true">#</a> $.get()的使用</h5><p>​ 本质上只能发送get请求</p>`,5),u=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"$.get(url, data, success, datatype)"),n("th",null,"说明")])]),n("tbody",null,[n("tr",null,[n("td",null,"url"),n("td",null,"所请求的url")]),n("tr",null,[n("td",null,"data"),n("td",null,"请求所传递的数据")]),n("tr",null,[n("td",{"css-module":".code"},"success: function()"),n("td",null,"成功之后的回调")]),n("tr",null,[n("td",null,"datatype:"),n("td",null,"需要返回的数据类型")])])],-1),i=s(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;./server/nav-json.php&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token comment">// 成功回调之后的函数</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="post-的使用" tabindex="-1"><a class="header-anchor" href="#post-的使用" aria-hidden="true">#</a> $.post()的使用</h5><p>​ 参数一致，用法一直，目的一致</p><p>​ 代码略.</p><hr><h2 id="_3-0-注册案例" tabindex="-1"><a class="header-anchor" href="#_3-0-注册案例" aria-hidden="true">#</a> 3.0 注册案例</h2><p>​ 跟着练习思考使用ajax解决问题的思路</p><h4 id="案例的基本情况" tabindex="-1"><a class="header-anchor" href="#案例的基本情况" aria-hidden="true">#</a> 案例的基本情况</h4><h5 id="准备1-获取验证码的getcode-php文件" tabindex="-1"><a class="header-anchor" href="#准备1-获取验证码的getcode-php文件" aria-hidden="true">#</a> 准备1：获取验证码的getCode.php文件</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;12345&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;23456&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;34567&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;45678&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/*生成一个随机索引  array_rand:可以生成指定的数组长度内的索引*/</span>
    <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="准备2-数据的data-json文件" tabindex="-1"><a class="header-anchor" href="#准备2-数据的data-json文件" aria-hidden="true">#</a> 准备2：数据的data.json文件</h5><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;jack&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;rose&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;12345678901&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>	
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;rose&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;12345678902&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;12345678909&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lili&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;pass&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;mobile&quot;</span><span class="token operator">:</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="准备3-验证用户名是否存在的validatausername-php文件" tabindex="-1"><a class="header-anchor" href="#准备3-验证用户名是否存在的validatausername-php文件" aria-hidden="true">#</a> 准备3：验证用户名是否存在的validataUsername.php文件</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;REQUEST_METHOD&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">/*1.读取文件*/</span>
        <span class="token variable">$dataStr</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*2.转换为数组，因为我们需要判断数组中的成员的name属性是否是指定的用户名--遍历*/</span>
        <span class="token variable">$dataArr</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$dataStr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*3.遍历*/</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$dataArr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$dataArr</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token property">name</span> <span class="token operator">==</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
                    <span class="token string single-quoted-string">&#39;code&#39;</span><span class="token operator">=&gt;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//状态码</span>
                    <span class="token string single-quoted-string">&#39;msg&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;用户名已存在&#39;</span> <span class="token comment">//状态信息</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="准备4-收集用户数据-实现上传和写入" tabindex="-1"><a class="header-anchor" href="#准备4-收集用户数据-实现上传和写入" aria-hidden="true">#</a> 准备4：收集用户数据，实现上传和写入</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;pass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$mobile</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mobile&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">/*创建需要进行存储的当前用户注册对象*/</span>
    <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
        <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;pass&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$pass</span><span class="token punctuation">,</span>
        <span class="token string double-quoted-string">&quot;mobile&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$mobile</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/*php无法直接将一个数据存储到文件，它需要先将数据写入到数组，再将数组写入到文件*/</span>
    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//字符串</span>
    <span class="token variable">$dataArr</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将json格式字符串转换为php数组</span>
    <span class="token comment">/*向数组中添加数据*/</span>
    <span class="token variable">$dataArr</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$obj</span><span class="token punctuation">;</span>
    <span class="token comment">/*将数据写入到文件，写入到文件的数据只能是字符串*/</span>
    <span class="token variable">$resultStr</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$dataArr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将数组转换为json格式字符串</span>
    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data.json&#39;</span><span class="token punctuation">,</span><span class="token variable">$resultStr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;code&#39;</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;msg&quot;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;注册成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="准备5-在前端页面引入jquery文件" tabindex="-1"><a class="header-anchor" href="#准备5-在前端页面引入jquery文件" aria-hidden="true">#</a> 准备5：在前端页面引入jQuery文件</h5><p>​ 引入jQuery文件，创建开始任务的js标签</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jquery-1.12.2.min.js<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  	<span class="token comment">// 1.0 获取验证码</span>
  	<span class="token comment">// 2.0 完成验证操作</span>
  	<span class="token comment">// 3.0 提交表单，进行上传操作</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现获取验证码" tabindex="-1"><a class="header-anchor" href="#实现获取验证码" aria-hidden="true">#</a> 实现获取验证码</h4><p>​ 步骤1： 为按钮添加单击事件</p><p>​ 步骤2：收集手机号，向服务器发送获取验证码的请求</p><p>​ 步骤3：接收验证码，给出响应的提示信息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.verify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   	<span class="token comment">// 判断当前的请求是否正在进行</span>
   	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token keyword">return</span><span class="token punctuation">;</span>
   	<span class="token punctuation">}</span>
   	<span class="token keyword">var</span> phone <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.mobile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   	<span class="token comment">// 发送请求</span>
   	$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      	<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;./getCode.php&quot;</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;phone&quot;</span><span class="token operator">:</span> phone<span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token function-variable function">beforeSend</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1\\d{10}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
          	<span class="token comment">// 在请求发送之前，进行验证手机号是否合法</span>
          	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              	<span class="token comment">// 元素慢慢出来，提示完之后，再慢慢消失</span>
            	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.tips &gt; p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;请输入正确的手机号码!&quot;</span><span class="token punctuation">)</span>
          	<span class="token punctuation">}</span>
          	<span class="token comment">// 验证成功 则不可以再次点击</span>
          	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.verify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          	<span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
          	<span class="token keyword">var</span> timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            	total<span class="token operator">--</span><span class="token punctuation">;</span>
              	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.verify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>total <span class="token operator">+</span> <span class="token string">&quot;s之后重新获取&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>total <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.verify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;重新获取&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> 
          	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
      	<span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token function">alert</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      	<span class="token punctuation">}</span>
   	<span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="验证用户名是否存在" tabindex="-1"><a class="header-anchor" href="#验证用户名是否存在" aria-hidden="true">#</a> 验证用户名是否存在</h4><p>​ 步骤1：添加事件，onblur</p><p>​ 步骤2：收集用户数据，发送请求</p><p>​ 步骤3：接收响应，给出提示</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;blur&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      	<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;./server/validataUsername.php&quot;</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span>name<span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 接收到的就是一个js的对象，不然就是一个字符串</span>
      	<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token comment">// console.log(res)</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.tips &gt; p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
      	<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现注册" tabindex="-1"><a class="header-anchor" href="#实现注册" aria-hidden="true">#</a> 实现注册</h4><p>​ 步骤1：添加注册事件</p><p>​ 步骤2：收集用户数据</p><p>​ 步骤3：发起ajax请求</p><p>​ 步骤4：接收响应，给出提示</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token keyword">return</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
  	<span class="token comment">// 通过表单序列化的方式来收集用户数据</span>
  	<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#ajaxForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      	<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;./server/register.php&quot;</span><span class="token punctuation">,</span>
      	<span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
      	<span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">beforeSend</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token comment">// 用户输入合法的验证</span>
          	<span class="token comment">// 如果验证通过，开启节流阀，避免重复提交</span>
          	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;正在注册中&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      	<span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.tips &gt; p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          	<span class="token punctuation">}</span>
      	<span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.tips &gt; p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;注册失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 不管成功还是失败都会执行</span>
      	<span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;注册&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      	<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在php文件最后加一句</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;code&#39;</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;msg&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;注册成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>jquery的表单序列化方法</th><th></th></tr></thead><tbody><tr><td>$(&quot;#ajaxForm&quot;).serialize();</td><td></td></tr><tr><td>可以将表单中所有name属性的表单元素的值收集，生成key=value&amp;key=value</td><td></td></tr><tr><td>在ajax中，支持两种格式的参数(1，对象，2，参数格式字符串)</td><td></td></tr></tbody></table><hr><h2 id="_4-0-art-template模板引擎" tabindex="-1"><a class="header-anchor" href="#_4-0-art-template模板引擎" aria-hidden="true">#</a> 4.0 art-template模板引擎</h2><h4 id="音乐案例" tabindex="-1"><a class="header-anchor" href="#音乐案例" aria-hidden="true">#</a> 音乐案例</h4><p>​ 渲染数据是开发中常见的活儿</p><h5 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h5><p>​ 准备静态页面，准备json</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;平凡之路&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;singer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;朴树&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;album&quot;</span><span class="token operator">:</span> <span class="token string">&quot;平凡的生命&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.\\/mp3\\/zhangsan.mp3&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;为了遇见你&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;singer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;薜之谦&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;album&quot;</span><span class="token operator">:</span> <span class="token string">&quot;为了遇见你&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.\\/mp3\\/See You Again.mp3&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;故乡&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;singer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;许巍&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;album&quot;</span><span class="token operator">:</span> <span class="token string">&quot;许巍-作品全集&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.\\/mp3\\/See You Again.mp3&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤1-新建music-php" tabindex="-1"><a class="header-anchor" href="#步骤1-新建music-php" aria-hidden="true">#</a> 步骤1：新建music.php</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 服务器读取json文件</span>
  	<span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;music.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤2-前端功能" tabindex="-1"><a class="header-anchor" href="#步骤2-前端功能" aria-hidden="true">#</a> 步骤2：前端功能</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jquery-1.12.2.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token comment">// 发送ajax请求</span>
  	$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;./music.php&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
		<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token comment">// 生成动态页面结构</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> result<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;tr&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;td&gt;&#39;</span><span class="token operator">+</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token operator">+</span><span class="token string">&#39;&lt;/td&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;td&gt;&#39;</span><span class="token operator">+</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>singer<span class="token operator">+</span><span class="token string">&#39;&lt;/td&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;td&gt;&#39;</span><span class="token operator">+</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>album<span class="token operator">+</span><span class="token string">&#39;&lt;/td&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;td&gt;&lt;audio src=&quot;&#39;</span><span class="token operator">+</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token operator">+</span><span class="token string">&#39;&quot; controls&gt;&lt;/audio&gt;&lt;/td&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;td&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;a href=&quot;./edit.php?id=&#39;</span><span class="token operator">+</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token operator">+</span><span class="token string">&#39;&quot; class=&quot;btn btn-primary&quot;&gt;编辑&lt;/a&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;a href=&quot;./delete.php?id=&#39;</span><span class="token operator">+</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token operator">+</span><span class="token string">&#39;&quot; class=&quot;btn btn-danger&quot;&gt;删除&lt;/a&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;/td&gt;&#39;</span><span class="token punctuation">;</span>
                html <span class="token operator">+=</span> <span class="token string">&#39;&lt;/tr&gt;&#39;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;tbody&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="模板引擎介绍" tabindex="-1"><a class="header-anchor" href="#模板引擎介绍" aria-hidden="true">#</a> 模板引擎介绍</h4><p>​ 有了模板引擎，再也不用那么复杂的去拼接字符串了</p><p>作用： 为了动态渲染的时候，简化拼接字符串</p><p>关键词语：<code>创建模板标签</code>、<code>循环遍历</code>、<code>&lt;% 逻辑语句 %&gt;</code>、<code>&lt;%= 输出语句 %&gt;</code></p><hr><h2 id="_5-0-模板引擎的2种语法" tabindex="-1"><a class="header-anchor" href="#_5-0-模板引擎的2种语法" aria-hidden="true">#</a> 5.0 模板引擎的2种语法</h2><h4 id="原生语法" tabindex="-1"><a class="header-anchor" href="#原生语法" aria-hidden="true">#</a> 原生语法</h4><h5 id="步骤1-引入文件" tabindex="-1"><a class="header-anchor" href="#步骤1-引入文件" aria-hidden="true">#</a> 步骤1：引入文件</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./js/template-native.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="步骤2-创建模板数据" tabindex="-1"><a class="header-anchor" href="#步骤2-创建模板数据" aria-hidden="true">#</a> 步骤2：创建模板数据</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/template<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navTemp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
  		<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;#&quot;</span><span class="token operator">&gt;</span>
  			<span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;&lt;%= src %&gt;&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span>
  			<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%=</span> text <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
  		<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
  	<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤3-调用模板引擎" tabindex="-1"><a class="header-anchor" href="#步骤3-调用模板引擎" aria-hidden="true">#</a> 步骤3：调用模板引擎</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      	<span class="token string-property property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./images/nav-1.png&quot;</span><span class="token punctuation">,</span>
      	<span class="token string-property property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;京东超市&quot;</span>
	<span class="token punctuation">}</span>
    <span class="token comment">// 调用函数  templete(模板id, 数据(对象))  返回替换后的DOM结构</span>
    <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">template</span><span class="token punctuation">(</span>navTemp<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> html<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="多个数据的数组动态生成" tabindex="-1"><a class="header-anchor" href="#多个数据的数组动态生成" aria-hidden="true">#</a> 多个数据的数组动态生成</h4><h5 id="步骤1-模板标签" tabindex="-1"><a class="header-anchor" href="#步骤1-模板标签" aria-hidden="true">#</a> 步骤1： 模板标签</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 这里的item指的是将来传进来的对象的属性 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/template<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navTemp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token operator">%</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;#&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;&lt;%= items[i].src %&gt;&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>如果是数组，那么在传入的时候需要包装为一个对象</code></p><h5 id="步骤2-调用模板" tabindex="-1"><a class="header-anchor" href="#步骤2-调用模板" aria-hidden="true">#</a> 步骤2：调用模板</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
    	<span class="token punctuation">{</span>
            <span class="token string-property property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./images/nav-1.png&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;京东超市&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token punctuation">{</span>
            <span class="token string-property property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./images/nav-2.png&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;全球购物&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      	<span class="token punctuation">{</span>
            <span class="token string-property property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./images/nav-3.png&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;京东市场&quot;</span>
        <span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
    <span class="token comment">// ！！！！！  把数组转换为一个对象的方式</span>
    <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">template</span><span class="token punctuation">(</span>navTemp<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;items&quot;</span><span class="token operator">:</span> arr<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> html<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="标准语法" tabindex="-1"><a class="header-anchor" href="#标准语法" aria-hidden="true">#</a> 标准语法</h4><h5 id="步骤1-引入插件" tabindex="-1"><a class="header-anchor" href="#步骤1-引入插件" aria-hidden="true">#</a> 步骤1：引入插件</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/template<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>musicTemp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token punctuation">{</span><span class="token punctuation">{</span> each items <span class="token keyword">as</span> value index <span class="token punctuation">}</span><span class="token punctuation">}</span>
	<span class="token operator">&lt;</span>tr<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> items<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> value<span class="token punctuation">.</span>singer <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> value<span class="token punctuation">.</span>album <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>td<span class="token operator">&gt;</span>
  			<span class="token operator">&lt;</span>audio src<span class="token operator">=</span><span class="token string">&quot;{{ value.src }}&quot;</span> controls<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>audio<span class="token operator">&gt;</span>
  		<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
  		<span class="token operator">&lt;</span>td<span class="token operator">&gt;</span>
  			<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;./edit.php?id={{ value.id }}&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;btn btn-primary&quot;</span><span class="token operator">&gt;</span>编辑<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
  			<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;./edit.php?id={{ value.id }}&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;btn btn-danger&quot;</span><span class="token operator">&gt;</span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
  		<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>
	<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">/</span>each <span class="token punctuation">}</span><span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="步骤2-发送ajax请求" tabindex="-1"><a class="header-anchor" href="#步骤2-发送ajax请求" aria-hidden="true">#</a> 步骤2：发送ajax请求</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  	<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;./music.php&quot;</span><span class="token punctuation">,</span>
  	<span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
  	<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">temlpate</span><span class="token punctuation">(</span><span class="token string">&quot;musicTemp&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;items&quot;</span><span class="token operator">:</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;tbody&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果参数是对象，就直接传入对象，</p><p>如果参数是数组，就包装成数组</p><p>​</p>`,76),r=[e,c,l,u,i];function k(d,v){return t(),p("div",null,r)}const b=a(o,[["render",k],["__file","02-ajax基础.html.vue"]]);export{b as default};
