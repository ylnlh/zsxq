import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-rpFDZqdF.js";const p={},o=t(`<h1 id="day02-jquery" tabindex="-1"><a class="header-anchor" href="#day02-jquery" aria-hidden="true">#</a> day02 - jQuery</h1><blockquote><p>学习目标：</p><p>能够操作 jQuery 属性 能够操作 jQuery 元素 能够操作 jQuery 元素尺寸、位置</p></blockquote><h2 id="_1-1-jquery-属性操作" tabindex="-1"><a class="header-anchor" href="#_1-1-jquery-属性操作" aria-hidden="true">#</a> 1.1. jQuery 属性操作</h2><p>​ jQuery 常用属性操作有三种：prop() / attr() / data() ;</p><h3 id="_1-1-1-元素固有属性值-prop" tabindex="-1"><a class="header-anchor" href="#_1-1-1-元素固有属性值-prop" aria-hidden="true">#</a> 1.1.1 元素固有属性值 prop()</h3><p>​ 所谓元素固有属性就是元素本身自带的属性，比如 a 元素里面的 href ，比如 input 元素里面的 type。</p><p><strong>语法</strong></p><p>​ 注意：prop() 除了普通属性操作，更适合操作表单属性：disabled / checked / selected 等。</p><h3 id="_1-1-2-元素自定义属性值-attr" tabindex="-1"><a class="header-anchor" href="#_1-1-2-元素自定义属性值-attr" aria-hidden="true">#</a> 1.1.2 元素自定义属性值 attr()</h3><p>​ 用户自己给元素添加的属性，我们称为自定义属性。 比如给 div 添加 index =“1”。</p><p><strong>语法</strong></p><p>​ 注意：attr() 除了普通属性操作，更适合操作自定义属性。（该方法也可以获取 H5 自定义属性）</p><h3 id="_1-1-3-数据缓存-data" tabindex="-1"><a class="header-anchor" href="#_1-1-3-数据缓存-data" aria-hidden="true">#</a> 1.1.3 数据缓存 data()</h3><p>​ data() 方法可以在指定的元素上存取数据，并不会修改 DOM 元素结构。一旦页面刷新，之前存放的数据都将被移除。</p><p><strong>语法</strong></p><p>​ 注意：同时，还可以读取 HTML5 自定义属性 data-index ，得到的是数字型。</p><p><strong>演示代码</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;http://www.itcast.cn&quot;</span> title<span class="token operator">=</span><span class="token string">&quot;都挺好&quot;</span><span class="token operator">&gt;</span>都挺好<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;checkbox&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;&quot;</span> checked<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div index<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> data<span class="token operator">-</span>index<span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token operator">&gt;</span>我是div<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token number">123</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//1. element.prop(&quot;属性名&quot;) 获取元素固有的属性值</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我们都挺好&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// console.log($(&quot;div&quot;).prop(&quot;index&quot;));</span>
            <span class="token comment">// 2. 元素的自定义属性 我们通过 attr()</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;data-index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3. 数据缓存 data() 这个里面的数据是存放在元素的内存里面</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&quot;uname&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;andy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&quot;uname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 这个方法获取data-index h5自定义属性 第一个 不用写data-  而且返回的是数字型</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-4-案例-购物车案例模块-全选" tabindex="-1"><a class="header-anchor" href="#_1-1-4-案例-购物车案例模块-全选" aria-hidden="true">#</a> 1.1.4 案例：购物车案例模块-全选</h3><blockquote><p>1.全选思路：里面3个小的复选框按钮（j-checkbox）选中状态（checked）跟着全选按钮（checkall）走。 2.因为checked 是复选框的固有属性，此时我们需要利用prop()方法获取和设置该属性。 3.把全选按钮状态赋值给3小复选框就可以了。 4.当我们每次点击小的复选框按钮，就来判断： 5.如果小复选框被选中的个数等于3 就应该把全选按钮选上，否则全选按钮不选。 6.:checked 选择器 :checked 查找被选中的表单元素。</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h2 id="_1-2-jquery-文本属性值" tabindex="-1"><a class="header-anchor" href="#_1-2-jquery-文本属性值" aria-hidden="true">#</a> 1.2. jQuery 文本属性值</h2><p>​ jQuery的文本属性值常见操作有三种：html() / text() / val() ; 分别对应JS中的 innerHTML 、innerText 和 value 属性。</p><h3 id="_1-2-1-jquery内容文本值" tabindex="-1"><a class="header-anchor" href="#_1-2-1-jquery内容文本值" aria-hidden="true">#</a> 1.2.1 jQuery内容文本值</h3><p>​ 常见操作有三种：html() / text() / val() ; 分别对应JS中的 innerHTML 、innerText 和 value 属性，主要针对元素的内容还有表单的值操作。</p><p><strong>语法</strong></p><p>​ 注意：html() 可识别标签，text() 不识别标签。</p><p><strong>演示代码</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>我是内容<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;请输入内容&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token comment">// 1. 获取设置元素内容 html()</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// $(&quot;div&quot;).html(&quot;123&quot;);</span>
        <span class="token comment">// 2. 获取设置元素文本内容 text()</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3. 获取设置表单值 val()</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-2-案例-购物车案例模块-增减商品数量" tabindex="-1"><a class="header-anchor" href="#_1-2-2-案例-购物车案例模块-增减商品数量" aria-hidden="true">#</a> 1.2.2. 案例：购物车案例模块-增减商品数量</h3><blockquote><p>1.核心思路：首先声明一个变量，当我们点击+号（increment），就让这个值++，然后赋值给文本框。 2.注意1： 只能增加本商品的数量， 就是当前+号的兄弟文本框（itxt）的值。 3.修改表单的值是val() 方法 4.注意2： 这个变量初始值应该是这个文本框的值，在这个值的基础上++。要获取表单的值 5.减号（decrement）思路同理，但是如果文本框的值是1，就不能再减了。</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h3 id="_1-2-3-案例-购物车案例模块-修改商品小计" tabindex="-1"><a class="header-anchor" href="#_1-2-3-案例-购物车案例模块-修改商品小计" aria-hidden="true">#</a> 1.2.3. 案例：购物车案例模块-修改商品小计</h3><blockquote><p>1.核心思路：每次点击+号或者-号，根据文本框的值 乘以 当前商品的价格 就是 商品的小计 2.注意1： 只能增加本商品的小计， 就是当前商品的小计模块（p-sum）<br> 3.修改普通元素的内容是text() 方法 4.注意2： 当前商品的价格，要把￥符号去掉再相乘 截取字符串 substr(1) 5.parents(‘选择器’) 可以返回指定祖先元素<br> 6.最后计算的结果如果想要保留2位小数 通过 toFixed(2) 方法 7.用户也可以直接修改表单里面的值，同样要计算小计。 用表单change事件 8.用最新的表单内的值 乘以 单价即可 但是还是当前商品小计</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h2 id="_1-3-jquery-元素操作" tabindex="-1"><a class="header-anchor" href="#_1-3-jquery-元素操作" aria-hidden="true">#</a> 1.3. jQuery 元素操作</h2><p>​ jQuery 元素操作主要讲的是用jQuery方法，操作标签的遍历、创建、添加、删除等操作。</p><h3 id="_1-3-1-遍历元素" tabindex="-1"><a class="header-anchor" href="#_1-3-1-遍历元素" aria-hidden="true">#</a> 1.3.1. 遍历元素</h3><p>​ jQuery 隐式迭代是对同一类元素做了同样的操作。 如果想要给同一类元素做不同操作，就需要用到遍历。</p><p><strong>语法1</strong></p><p>​ 注意：此方法用于遍历 jQuery 对象中的每一项，回调函数中元素为 DOM 对象，想要使用 jQuery 方法需要转换。</p><p><strong>语法2</strong></p><p>​ 注意：此方法用于遍历 jQuery 对象中的每一项，回调函数中元素为 DOM 对象，想要使用 jQuery 方法需要转换。</p><p><strong>演示代码</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果针对于同一类元素做不同操作，需要用到遍历元素（类似for，但是比for强大）</span>
            <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 1. each() 方法遍历元素 </span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> domEle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 回调函数第一个参数一定是索引号  可以自己指定索引号号名称</span>
                <span class="token comment">// console.log(i);</span>
                <span class="token comment">// 回调函数第二个参数一定是 dom 元素对象，也是自己命名</span>
                <span class="token comment">// console.log(domEle);  // 使用jQuery方法需要转换 $(domEle)</span>
                <span class="token function">$</span><span class="token punctuation">(</span>domEle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sum <span class="token operator">+=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>domEle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 2. $.each() 方法遍历元素 主要用于遍历数据，处理数据</span>
            <span class="token comment">// $.each($(&quot;div&quot;), function(i, ele) {</span>
            <span class="token comment">//     console.log(i);</span>
            <span class="token comment">//     console.log(ele);</span>
            <span class="token comment">// });</span>
            <span class="token comment">// $.each(arr, function(i, ele) {</span>
            <span class="token comment">//     console.log(i);</span>
            <span class="token comment">//     console.log(ele);</span>
            <span class="token comment">// })</span>
            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;andy&quot;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> ele</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出的是 name age 属性名</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出的是 andy  18 属性值</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-2-案例-购物车案例模块-计算总计和总额" tabindex="-1"><a class="header-anchor" href="#_1-3-2-案例-购物车案例模块-计算总计和总额" aria-hidden="true">#</a> 1.3.2. 案例：购物车案例模块-计算总计和总额</h3><blockquote><p>1.把所有文本框中的值相加就是总额数量，总计同理。 2.文本框里面的值不同，如果想要相加需要用 each() 遍历，声明一个变量做计数器，累加即可。</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h3 id="_1-3-3-创建、添加、删除" tabindex="-1"><a class="header-anchor" href="#_1-3-3-创建、添加、删除" aria-hidden="true">#</a> 1.3.3. 创建、添加、删除</h3><p>​ jQuery方法操作元素的创建、添加、删除方法很多，则重点使用部分，如下：</p><p><strong>语法总和</strong></p><p>​ 注意：以上只是元素的创建、添加、删除方法的常用方法，其他方法请参详API。</p><p><strong>案例代码</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>原先的li<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;test&quot;</span><span class="token operator">&gt;</span>我是原先的div<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1. 创建元素</span>
            <span class="token keyword">var</span> li <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;我是后来创建的li&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
            <span class="token comment">// 2. 添加元素</span>
            <span class="token comment">// 	2.1 内部添加</span>
            <span class="token comment">// $(&quot;ul&quot;).append(li);  内部添加并且放到内容的最后面 </span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 内部添加并且放到内容的最前面</span>
            <span class="token comment">//  2.2 外部添加</span>
            <span class="token keyword">var</span> div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;我是后妈生的&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// $(&quot;.test&quot;).after(div);</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
      
            <span class="token comment">// 3. 删除元素</span>
            <span class="token comment">// $(&quot;ul&quot;).remove(); 可以删除匹配的元素 自杀</span>
            <span class="token comment">// $(&quot;ul&quot;).empty(); // 可以删除匹配的元素里面的子节点 孩子</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 可以删除匹配的元素里面的子节点 孩子</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-4-案例-购物车案例模块-删除商品模块" tabindex="-1"><a class="header-anchor" href="#_1-3-4-案例-购物车案例模块-删除商品模块" aria-hidden="true">#</a> 1.3.4 案例：购物车案例模块-删除商品模块</h3><blockquote><p>1.核心思路：把商品remove() 删除元素即可 2.有三个地方需要删除： 1. 商品后面的删除按钮 2. 删除选中的商品 3. 清理购物车 3.商品后面的删除按钮： 一定是删除当前的商品，所以从 $(this) 出发 4.删除选中的商品： 先判断小的复选框按钮是否选中状态，如果是选中，则删除对应的商品 5.清理购物车： 则是把所有的商品全部删掉</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h3 id="_1-3-5-案例-购物车案例模块-选中商品添加背景" tabindex="-1"><a class="header-anchor" href="#_1-3-5-案例-购物车案例模块-选中商品添加背景" aria-hidden="true">#</a> 1.3.5 案例：购物车案例模块-选中商品添加背景</h3><blockquote><p>1.核心思路：选中的商品添加背景，不选中移除背景即可 2.全选按钮点击：如果全选是选中的，则所有的商品添加背景，否则移除背景 3.小的复选框点击： 如果是选中状态，则当前商品添加背景，否则移除背景 4.这个背景，可以通过类名修改，添加类和删除类</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h2 id="_1-4-jquery-尺寸、位置操作" tabindex="-1"><a class="header-anchor" href="#_1-4-jquery-尺寸、位置操作" aria-hidden="true">#</a> 1.4. jQuery 尺寸、位置操作</h2><p>​ jQuery中分别为我们提供了两套快速获取和设置元素尺寸和位置的API，方便易用，内容如下。</p><h3 id="_1-4-1-jquery-尺寸操作" tabindex="-1"><a class="header-anchor" href="#_1-4-1-jquery-尺寸操作" aria-hidden="true">#</a> 1.4.1. jQuery 尺寸操作</h3><p>​ jQuery 尺寸操作包括元素宽高的获取和设置，且不一样的API对应不一样的盒子模型。</p><p><strong>语法</strong></p><p><strong>代码演示</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1. width() / height() 获取设置元素 width和height大小 </span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// $(&quot;div&quot;).width(300);</span>

            <span class="token comment">// 2. innerWidth() / innerHeight()  获取设置元素 width和height + padding 大小 </span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">innerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 3. outerWidth()  / outerHeight()  获取设置元素 width和height + padding + border 大小 </span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 4. outerWidth(true) / outerHeight(true) 获取设置 width和height + padding + border + margin</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 注意：有了这套 API 我们将可以快速获取和子的宽高，至于其他属性想要获取和设置，还要使用 css() 等方法配合。</p><h3 id="_1-4-2-jquery-位置操作" tabindex="-1"><a class="header-anchor" href="#_1-4-2-jquery-位置操作" aria-hidden="true">#</a> 1.4.2. jQuery 位置操作</h3><p>​ jQuery的位置操作主要有三个： offset()、position()、scrollTop()/scrollLeft() , 具体介绍如下:</p><p><strong>语法</strong></p><p><strong>代码演示</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;father&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;son&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;back&quot;</span><span class="token operator">&gt;</span>返回顶部<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;container&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
   
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1. 获取设置距离文档的位置（偏移） offset</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// $(&quot;.son&quot;).offset({</span>
            <span class="token comment">//     top: 200,</span>
            <span class="token comment">//     left: 200</span>
            <span class="token comment">// });</span>
      
            <span class="token comment">// 2. 获取距离带有定位父级位置（偏移） position   如果没有带有定位的父级，则以文档为准</span>
            <span class="token comment">// 这个方法只能获取不能设置偏移</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// $(&quot;.son&quot;).position({</span>
            <span class="token comment">//     top: 200,</span>
            <span class="token comment">//     left: 200</span>
            <span class="token comment">// });</span>
      
      		<span class="token comment">// 3. 被卷去的头部</span>
      		<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 被卷去的头部 scrollTop()  / 被卷去的左侧 scrollLeft()</span>
            <span class="token comment">// 页面滚动事件</span>
            <span class="token keyword">var</span> boxTop <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// console.log(11);</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> boxTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.back&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.back&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 返回顶部</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.back&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// $(document).scrollTop(0);</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;body, html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">scrollTop</span><span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// $(document).stop().animate({</span>
                <span class="token comment">//     scrollTop: 0</span>
                <span class="token comment">// }); 不能是文档而是 html和body元素做动画</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-3-案例-带有动画的返回顶部" tabindex="-1"><a class="header-anchor" href="#_1-4-3-案例-带有动画的返回顶部" aria-hidden="true">#</a> 1.4.3. 案例：带有动画的返回顶部</h3><blockquote><p>1.核心原理： 使用animate动画返回顶部。 2.animate动画函数里面有个scrollTop 属性，可以设置位置 3.但是是元素做动画，因此 $(“body,html”).animate({scrollTop: 0})</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h3 id="_1-4-4-案例-品优购电梯导航-上" tabindex="-1"><a class="header-anchor" href="#_1-4-4-案例-品优购电梯导航-上" aria-hidden="true">#</a> 1.4.4. 案例： 品优购电梯导航（上）</h3><blockquote><p>1.当我们滚动到 今日推荐 模块，就让电梯导航显示出来 2.点击电梯导航页面可以滚动到相应内容区域 3.核心算法：因为电梯导航模块和内容区模块一一对应的 4.当我们点击电梯导航某个小模块，就可以拿到当前小模块的索引号 5.就可以把animate要移动的距离求出来：当前索引号内容区模块它的offset().top 6.然后执行动画即可</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h3 id="_1-4-5-案例-品优购电梯导航-下" tabindex="-1"><a class="header-anchor" href="#_1-4-5-案例-品优购电梯导航-下" aria-hidden="true">#</a> 1.4.5. 案例：品优购电梯导航（下）</h3><blockquote><p>1.当我们点击电梯导航某个小li， 当前小li 添加current类，兄弟移除类名 2.当我们页面滚动到内容区域某个模块， 左侧电梯导航，相对应的小li模块，也会添加current类， 兄弟移除current类。 3.触发的事件是页面滚动，因此这个功能要写到页面滚动事件里面。 4.需要用到each，遍历内容区域大模块。 each里面能拿到内容区域每一个模块元素和索引号 5.判断的条件： 被卷去的头部 大于等于 内容区域里面每个模块的offset().top 6.就利用这个索引号找到相应的电梯导航小li添加类。</p></blockquote><p>​ 代码实现略。(详情参考源代码)</p><h2 id="_1-5-今日总结" tabindex="-1"><a class="header-anchor" href="#_1-5-今日总结" aria-hidden="true">#</a> 1.5. 今日总结</h2>`,83),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","02-jQuery.html.vue"]]);export{k as default};
