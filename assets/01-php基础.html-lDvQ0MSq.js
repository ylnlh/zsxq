import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as e}from"./app-rpFDZqdF.js";const p={},t=e(`<h1 id="php简要札记" tabindex="-1"><a class="header-anchor" href="#php简要札记" aria-hidden="true">#</a> php简要札记</h1><hr><blockquote><p>$$ 了解php基本使用，是方便后期理解node的使用，而不是主要技能，前端开发不写这个 $$</p></blockquote><h2 id="_1-0-网络的基本概念" tabindex="-1"><a class="header-anchor" href="#_1-0-网络的基本概念" aria-hidden="true">#</a> 1.0 网络的基本概念</h2><h4 id="服务器" tabindex="-1"><a class="header-anchor" href="#服务器" aria-hidden="true">#</a> 服务器</h4><p>​ 服务器小到一台计算机，大到几十万几千万的机房，其实也就是一些计算机群组，存储量更大</p><p>** 服务器就是提供各个互联网公司项目的一个平台，所谓项目上线，就是将项目发布到服务器上</p><p>** 服务器就是一台主机，也需要操作系统，里面什么软件都没有，需要安装一些环境</p><p>** 在开发的时候需要什么环境，到时候主机里面就得配置什么环境</p><p>** 在开发中可以不用知道那个主机在哪里，因为可以使用远程连接操控</p><p>** 服务器有买的，有租的，有公司直接使用小型的，或者自己做小项目测试的虚拟主机</p><p>​ 阿里云、腾讯云、百度云都提供租售服务，不过我们目前可以先不考虑租，因为没有完整的项目，去了公司也由公司统一搞定，</p><h4 id="ip地址" tabindex="-1"><a class="header-anchor" href="#ip地址" aria-hidden="true">#</a> IP地址</h4><p>​ IP地址就像是生活中的地址，比如 德云社北京总部，地址就在 北京市西城区北纬路甲1号</p><p>​ 那么某个公司的项目地址，就在网络服务器中的某个位置，例如 192.78.36.52</p><p>​ 每个地址都不会重复，都是唯一的，但是这样访问起来很麻烦，因为ip地址记忆起来很麻烦</p><h4 id="域名" tabindex="-1"><a class="header-anchor" href="#域名" aria-hidden="true">#</a> 域名</h4><p>​ 比较出名的就是新网、阿里云都提供域名的租借和购买，价格不等</p><p>​ 域名就是为了方便用一个比较好记的单词或者简写形式去对应一个复杂的ip地址</p><p>baidu.com 对应的就是一个叫做 220.181.57.216 的ip地址</p><h4 id="端口" tabindex="-1"><a class="header-anchor" href="#端口" aria-hidden="true">#</a> 端口</h4><p>​ 还是拿生活中的场景来说，端口就好像楼层，默认是80层，并且每层的单位还都不一样</p><p>​ 网址后面也是有楼层的，或者叫端口，默认是80端口，如果改写了别的端口，那么项目也有完全不同的指向，两个是不同的地方</p><p>​ 例如：https://www.baidu.com:80 这是默认的端口，所以当输入完毕之后，:80 这个值会消失</p><p>​ 而当输入 https://www.baidu.com:3030 这个端口和上一个端口就指向了不容的区域</p><p>​ http://www.baidu.com:80</p><p>​ https://www.baidu.com:443</p><p>​ 数据库 :3306</p><h4 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h4><p>​ url是浏览器跟服务器交流的主要方式之一</p><p>​ 1，协议 : <strong>http:// https://</strong> ftp:// file://</p><p>​ 2，域名 : www.baidu.com .cn .org ...</p><p>​ 3，端口 : 默认80，可以忽略</p><p>​ 4，文件 : 默认首页index.html，可以忽略</p><p>​ 5，键值 : 通过？开头，然后通过k=v表示，通过&amp;连接</p><p>​ 6，锚点值 : #号表示的内容</p><p>​ 例如： w a m p l n m p</p><p>​ https://d.weibo.com/item/?topnav=1&amp;mod=logo&amp;wvr=6#first</p><hr><h2 id="_2-0-操作phpstudy" tabindex="-1"><a class="header-anchor" href="#_2-0-操作phpstudy" aria-hidden="true">#</a> 2.0 操作PHPstudy</h2><h4 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h4><p>​ 由于在做案例的时候，会涉及到每天的内容不同，或者每个案例不相同，在设置站点的时候，文件夹也不同，所以如果想将文件夹设置在其他位置，也能实现web容器的情况就可以做出以下设置</p><p>​ 选择完毕之后会自动重启，选择好文件夹之后，发现并如果当前没有默认首选项里面的页面则会报错，所以需要再接着设置</p><p>选择完毕之后，一定要点击<strong>应用</strong></p><p>​ 以下设置能够将文件以列表的形式展示 ​ 如此设置，就能看到文件以列表形式展示，然后单击某个文件则进行相应的跳转</p><h2 id="_3-0-配置虚拟主机" tabindex="-1"><a class="header-anchor" href="#_3-0-配置虚拟主机" aria-hidden="true">#</a> 3.0 配置虚拟主机</h2><h4 id="配置第一个虚拟主机" tabindex="-1"><a class="header-anchor" href="#配置第一个虚拟主机" aria-hidden="true">#</a> 配置第一个虚拟主机</h4><p>​ 这里的意思就是说，刚刚随便找了个文件夹，但是打开的方式就变得很复杂了，所以手动设置一下类似于域名的地址，指向那个文件夹，这样，打开的时候，就方便啦</p><p>​ 1，配置虚拟主机名称</p><p>​ 选择之后，点击确认，自动重启，这个时候发现虽然重启结束了，但是用刚刚的地址访问不了</p><p>​ 2， 配置host文件 （一个是快捷方式，一个是直接找）</p><p>​ 编辑host文件，可以用记事本或者编辑器打开</p><p>​ 这个时候，如果再去通过这个地址去打开页面，发现还是打不开，不过提示的文本发生了变化，这是由于配置的过程还没结束，还需要再进行</p><p>​ 3， 配置文件修改参数</p><p>​ 注意，这里有个小细节，要修改，还要重启</p><h4 id="配置第二个虚拟主机" tabindex="-1"><a class="header-anchor" href="#配置第二个虚拟主机" aria-hidden="true">#</a> 配置第二个虚拟主机</h4><p>​ 注意：</p><p>​ 当在配置第二个虚拟主机的时候，这一次生成，会把第一次生成的内容替换掉，</p><p>​ 也就是最后一步那个添加Index的步骤，要重复操作一下，再重启一下就好了</p><hr><h2 id="_4-0-从服务器获取时间" tabindex="-1"><a class="header-anchor" href="#_4-0-从服务器获取时间" aria-hidden="true">#</a> 4.0 从服务器获取时间</h2><h4 id="获取时间注意事项" tabindex="-1"><a class="header-anchor" href="#获取时间注意事项" aria-hidden="true">#</a> 获取时间注意事项</h4><p>​ 1， 只有php格式的文件才能解析php的代码，不然会被解析成注释</p><p>​ 2， 按照php的格式来写内容</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// 在php中，表述输出当前的时间</span>
  <span class="token keyword">echo</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-0-php语法基本规则" tabindex="-1"><a class="header-anchor" href="#_5-0-php语法基本规则" aria-hidden="true">#</a> 5.0 php语法基本规则</h2><blockquote><h3 id="在php代码内不可以写标签-php的代码可以在标签以内" tabindex="-1"><a class="header-anchor" href="#在php代码内不可以写标签-php的代码可以在标签以内" aria-hidden="true">#</a> 在php代码内不可以写标签，php的代码可以在标签以内</h3><h3 id="写完一句加一个分号" tabindex="-1"><a class="header-anchor" href="#写完一句加一个分号" aria-hidden="true">#</a> <strong>写完一句加一个分号</strong></h3></blockquote><h5 id="php的输出方式" tabindex="-1"><a class="header-anchor" href="#php的输出方式" aria-hidden="true">#</a> - php的输出方式</h5><p>​ 1， echo 输出字符串，多个字符串用逗号</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 不识别多个空格</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;123&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;adfdf&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 2， print( ) 输出字符串， 只能输出一个值</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;abc&quot;</span><span class="token punctuation">)</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 3，print_r( ) 输出复杂的数据类型</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  	<span class="token comment">// 输出： Array([0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 3)</span>
  
  	<span class="token keyword">echo</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
  	<span class="token comment">// 输出：Array</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 4，var_dump( ) 可以输出复杂类型，输出复杂类型的key和value</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;ab&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;fbb&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;exo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  	<span class="token comment">// 输出：array(3) { [0] =&gt; string(2)&#39;ab&#39; [1] =&gt; string(3)&#39;fbb&#39; [2] =&gt; string(3)&#39;exo&#39; }</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="html和php代码的混写" tabindex="-1"><a class="header-anchor" href="#html和php代码的混写" aria-hidden="true">#</a> - html和php代码的混写</h5><p>​ 1， php的代码只要不在那一堆尖括号里面，则不会执行，会原样输出</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>echo &quot;abc&quot;   // 原样输出
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">//...</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 2，php语法中也是存在多分支语句，也就是if语句</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;结果为真&#39;</span>
  	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token delimiter important">?&gt;</span></span>
  // 这句话是在php语法结构以外
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>结果为真<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> - 注释</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 在php中，注释和js中的都是一样的</span>

<span class="token comment">// line comment 单行注释</span>
<span class="token comment"># line comment 单行注释 不推荐使用</span>
<span class="token comment">/*
	block comment   块级注释
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> - 变量</h5><p>​ ** 所有的代码必须都得在php的代码以内</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">// 变量不需要关键字声明，不过都得加上$开头，区分大小写，其他跟js一样</span>
	<span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$age</span><span class="token punctuation">;</span>
	<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;jack&#39;</span><span class="token punctuation">;</span>
	<span class="token comment">/* 如果不赋值，默认是null */</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="操作变量的函数" tabindex="-1"><a class="header-anchor" href="#操作变量的函数" aria-hidden="true">#</a> - 操作变量的函数</h5><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td>isset( )</td><td>判断当前变量是否存在，判断变量是否定义了，判断当前的值是否为null</td></tr><tr><td>empty( )</td><td>判断变量是否为空值 - &quot;&quot; 0 &quot;0&quot; null false array( )</td></tr><tr><td>unset( )</td><td>删除变量，可以删除多个，用逗号隔开</td></tr></tbody></table><p>​ isset( )</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// 如果返回结果为true那么返回 1   如果返回结果为fall，那么返回null
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;abc&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 空白</span>
  <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;/br&gt;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean(false)</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ empty( )</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;abc&#39;</span><span class="token punctuation">;</span>
  <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean(true)</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ unset( ) 删除变量</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;abc&#39;</span><span class="token punctuation">;</span>
  <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;/hr&gt;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// unset($name, $age)</span>
  <span class="token keyword">echo</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> - 数据类型</h5><p>​ js中的数据类型主要有以下几种</p><table><thead><tr><th>数据类型</th><th>解释</th></tr></thead><tbody><tr><td>string</td><td>字符串</td></tr><tr><td>integer</td><td>整型 - 只能是整数</td></tr><tr><td>float</td><td>浮点型 - 小数</td></tr><tr><td>boolean</td><td>布尔型 - true或者false</td></tr><tr><td>array</td><td>数组</td></tr><tr><td>object</td><td>对象</td></tr><tr><td>NULL</td><td>空</td></tr></tbody></table><p>​ 可以按照以下方式分成三个种类：</p><table><thead><tr><th>基本数据类型</th><th>复合数据类型</th><th>特殊类型</th></tr></thead><tbody><tr><td>string 字符串</td><td>array 数组</td><td>NULL 空</td></tr><tr><td>integer 整型 - 只能是整数</td><td>object 对象</td><td>资源</td></tr><tr><td>float 浮点型 - 小数</td><td></td><td></td></tr><tr><td>boolean 布尔型 - true或者false</td><td></td><td></td></tr></tbody></table><p>​</p><p>​ 检测数据类型的方法：</p><table><thead><tr><th>方法名称</th><th>功能</th></tr></thead><tbody><tr><td>is_string( )</td><td>判断当前变量是否为字符串类型</td></tr><tr><td>is_bool( )</td><td>判断当前变量是否是布尔类型</td></tr><tr><td>is_int( )</td><td>判断是否是整型</td></tr><tr><td>is_float( )</td><td>判断是否是浮点型</td></tr><tr><td>is_array( )</td><td>判断是否为数组类型</td></tr><tr><td>is_object( )</td><td>判断当前变量是否是对象类型</td></tr></tbody></table><p>​</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;delireba&#39;</span><span class="token punctuation">;</span>
	<span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	
	<span class="token keyword">echo</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean(true)</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_bool</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// </span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="字符串的使用" tabindex="-1"><a class="header-anchor" href="#字符串的使用" aria-hidden="true">#</a> - 字符串的使用</h5><p>​ 在php中，字符串的使用是有区别的</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;fbb&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$name</span><span class="token punctuation">;</span> <span class="token comment">// fbb</span>
	<span class="token comment">/* 在php中，字符串的拼接使用小数点，而不是使用加号 */</span>
	<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;她的名字叫&#39;</span><span class="token operator">.</span><span class="token variable">$name</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 单引号的特点</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">/* 在单引号中有变量的话，单引号无法解析 */</span>
  	<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;yiyang&#39;</span><span class="token punctuation">;</span>
	
  	<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;我的名字叫$name&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 我的名字叫$name</span>

	<span class="token comment">// 而且出现单引号嵌套或者斜杠 需要通过斜杠来转义</span>
	<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;我的\\\\名字\\&#39;叫$name&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 我的\\名字&#39;叫$name</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 双引号的特点</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  	<span class="token comment">/* 在单引号中有变量的话，单引号无法解析 */</span>
  	<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Bluce&quot;</span><span class="token punctuation">;</span>
	
  	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;我的名字叫<span class="token interpolation"><span class="token variable">$name</span></span>&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 我的名字叫Bluce</span>

	<span class="token comment">// 如果变量后面还有合法字符，则后面的一截都被当变量了</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;我的名字叫<span class="token interpolation"><span class="token variable">$name</span></span>我今年20&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 我的名字</span>
	<span class="token comment">// 加上空格就好了</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;我的名字叫<span class="token interpolation"><span class="token variable">$name</span></span> 我今年20&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 我的名字叫Bluce 我今年20</span>
	
	<span class="token comment">// 推荐</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;我的名字叫<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$name</span><span class="token punctuation">}</span></span>我今年20&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 我的名字叫Bluce我今年20</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 支持的转义字符</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>\\&quot;  \\\\  \\n \\t \\$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​</p>`,116),i=[t];function l(o,c){return a(),s("div",null,i)}const u=n(p,[["render",l],["__file","01-php基础.html.vue"]]);export{u as default};
