import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,f as t}from"./app-rpFDZqdF.js";const e={},l=t(`<p>​</p><h1 id="day01-移动web开发-h5c3" tabindex="-1"><a class="header-anchor" href="#day01-移动web开发-h5c3" aria-hidden="true">#</a> day01 - 移动web开发_H5C3</h1><h2 id="html5" tabindex="-1"><a class="header-anchor" href="#html5" aria-hidden="true">#</a> HTML5</h2><blockquote><p>学习目标：</p><p>​ 了解 H5 新变化</p><p>​ 掌握 H5 新增语义化标签</p><p>​ 掌握 H5 新增多媒体标签</p><p>​ 掌握 H5 新增 input 表单、表单属性</p></blockquote><h2 id="_1-1-语义化标签-了解" tabindex="-1"><a class="header-anchor" href="#_1-1-语义化标签-了解" aria-hidden="true">#</a> 1.1. 语义化标签 了解</h2><p>使用语义化标签的好处是增强了代码的可阅读性，也方便了网站的seo（Search Engine Optimization，搜索引擎优化）。</p><ul><li>header 头部标签</li><li>nav 导航标签</li><li>article 内容标签</li><li>section 块级标签</li><li>aside 侧边栏标签</li><li>footer 尾部标签</li></ul><h2 id="_1-2-h5表单" tabindex="-1"><a class="header-anchor" href="#_1-2-h5表单" aria-hidden="true">#</a> 1.2. h5表单</h2><p>h5表单分为三大部分来学习 <strong>输入标签</strong>、<strong>表单属性</strong> 和 <strong>表单事件</strong></p><h3 id="_1-2-1-h5表单标签" tabindex="-1"><a class="header-anchor" href="#_1-2-1-h5表单标签" aria-hidden="true">#</a> 1.2.1 h5表单标签</h3><p>对于h5表单标签的学习，以下案例已经包含了所有的新知识，我们只需要做个选择题即可，看着案例来学习新标签即可。</p><h4 id="_1-2-1-1-常见输入类型" tabindex="-1"><a class="header-anchor" href="#_1-2-1-1-常见输入类型" aria-hidden="true">#</a> 1.2.1.1. 常见输入类型</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>text password radio checkbox button file hidden submit reset image
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-2-1-2-新的输入类型" tabindex="-1"><a class="header-anchor" href="#_1-2-1-2-新的输入类型" aria-hidden="true">#</a> 1.2.1.2. 新的输入类型</h4><ul><li><p>email 邮箱</p></li><li><p>url 网址</p></li><li><p>search 搜索</p></li><li><p>tel 电话</p></li><li><p>日期等</p><ul><li>date</li><li>time</li><li>datetime</li><li>datetime-local</li><li>month</li><li>week</li></ul></li><li><p>number 数字输入框</p><ul><li>min 最小值</li><li>max 最大值</li><li>step 步长</li></ul></li><li><p>range 范围</p><ul><li>min 最小值</li><li>max 最大值</li><li>step 步长</li></ul></li><li><p>color 颜色</p><ul><li>标签的value属性中写颜色值只能写 这格式 <code>#000000</code></li></ul></li><li><p>datalist 可输入表单</p></li></ul><h3 id="_1-2-2-h5表单属性" tabindex="-1"><a class="header-anchor" href="#_1-2-2-h5表单属性" aria-hidden="true">#</a> 1.2.2. h5表单属性</h3><ul><li><p>placeholder:占位符-提示信息</p></li><li><p>autofocus:自动获得焦点-一般页面中放1个</p></li><li><p>autocomplete 自动完成</p><ul><li>当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。</li><li>默认已经打开 如 <code>autocomplete=on</code> 关闭 <code>autocomplete =off</code></li><li>需要放在表单内同时加上name属性</li></ul></li><li><p>multiple:可以多选文件提交</p><ul><li>结合文件上传标签 <code>&lt;input type=&quot;file&quot; &gt;</code> 一起使用</li></ul></li><li><p>form属性，可以将输入标签放在表单的外面，还受到表单的管理</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 指定了id为ff --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ff<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 指定了属性form，值为表单的id=ff --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">form</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ff<span class="token punctuation">&quot;</span></span>  <span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>required:必填验证</p></li><li><p>novalidate:关闭验证</p><ul><li>在表单上添加该属性，那么在提交的时候就不会再执行 required验证</li></ul></li><li><p>pattern：自定义验证-通过编写正则表达式自定义验证规则 一般和required同时使用</p><ul><li>表单事件</li></ul></li></ul><h2 id="_1-2-多媒体标签" tabindex="-1"><a class="header-anchor" href="#_1-2-多媒体标签" aria-hidden="true">#</a> 1.2. 多媒体标签</h2><p>多媒体标签分为 音频 <strong>audio</strong> 和视频 <strong>video</strong> 两个标签 使用它们，我们可以很方便的在页面中嵌入音频和视频，而不再去使用落后的flash和其他浏览器插件了。</p><p>因为多媒体标签的 属性、方法、事件比较多，因此我们需要什么功能的时候，就需要去查找相关的文档进行学习使用。</p><h3 id="_1-2-1-audio-音频标签" tabindex="-1"><a class="header-anchor" href="#_1-2-1-audio-音频标签" aria-hidden="true">#</a> 1.2.1. audio 音频标签</h3><p><strong>使用</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>小猪佩奇.mp3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autoplay</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>支持的格式</strong></p><table><thead><tr><th>格式</th><th>MIME-type</th></tr></thead><tbody><tr><td>MP3</td><td>audio/mpeg</td></tr><tr><td>Ogg</td><td>audio/ogg</td></tr><tr><td>Wav</td><td>audio/wav</td></tr></tbody></table><h3 id="_1-2-2-video-视频标签" tabindex="-1"><a class="header-anchor" href="#_1-2-2-video-视频标签" aria-hidden="true">#</a> 1.2.2. video 视频标签</h3><p><strong>使用</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>小猪佩奇.mp4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autoplay</span> <span class="token attr-name">controls</span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>支持的格式</strong></p><table><thead><tr><th>格式</th><th>MIME-type</th></tr></thead><tbody><tr><td>MP4</td><td>video/mp4</td></tr><tr><td>WebM</td><td>video/webm</td></tr><tr><td>Ogg</td><td>video/ogg</td></tr></tbody></table><p><strong>video常用属性、方法、事件</strong></p><table><thead><tr><th>属性</th><th>方法</th><th>事件</th></tr></thead><tbody><tr><td>duration 视频播放时长</td><td>play 播放</td><td>canplay 视频加载完毕 准备播放</td></tr><tr><td>currentTime 当前播放进度</td><td>pause 暂停</td><td>timeupdate 播放时-持续触发</td></tr><tr><td>volume 音量大小</td><td></td><td></td></tr></tbody></table><p><strong>source标签</strong></p><p>可以通过在多媒体标签内加入<strong>source</strong>标签，用来指定多个播放路径，当第一个<strong>source</strong>标签的路径出错时，自动会切换到第二个<strong>source</strong>标签</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token comment">&lt;!-- 当1.mp4出错时，自动切换到2.mp4 ... --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>object-fit属性</strong></p><p>当<strong>video</strong>标签视频内容宽度没有铺满video标签时，可以在css写上 该属性即可</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>    <span class="token selector">video</span> <span class="token punctuation">{</span>
      <span class="token comment">/* 让视频内容铺满整个video标签 */</span>
      <span class="token property">object-fit</span><span class="token punctuation">:</span> fill<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-3-兼容性" tabindex="-1"><a class="header-anchor" href="#_1-2-3-兼容性" aria-hidden="true">#</a> 1.2.3. 兼容性</h3><p>因为多媒体标签在不同的浏览器下是不一样的外观，我们有时候需要统一所有的样式，所以就需要我们自己使用**div + 多媒体 **的一些api实现 控制条工具 。</p><h3 id="_1-2-4-公共属性" tabindex="-1"><a class="header-anchor" href="#_1-2-4-公共属性" aria-hidden="true">#</a> 1.2.4. 公共属性</h3><p>以下属性 是要直接写在标签上的 如 <strong>autoplay</strong> <strong>controls</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>小猪佩奇.mp4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autoplay</span> <span class="token attr-name">controls</span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>如果出现该属性，则音频在就绪后马上播放。</td></tr><tr><td>controls</td><td>controls</td><td>如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td>loop</td><td>loop</td><td>如果出现该属性，则每当音频结束时重新开始播放。</td></tr><tr><td>muted</td><td>muted</td><td>规定视频输出应该被静音。</td></tr><tr><td>preload</td><td>preload</td><td>如果出现该属性，则音频在页面加载时进行加载，并预备播放。如果使用 &quot;autoplay&quot;，则忽略该属性。</td></tr><tr><td>src</td><td><em>url</em></td><td>要播放的音频的 URL。</td></tr></tbody></table><h2 id="_1-3-伪类选择符" tabindex="-1"><a class="header-anchor" href="#_1-3-伪类选择符" aria-hidden="true">#</a> 1.3. 伪类选择符</h2><p>伪类选择符其实我们在基础班就已经学习过一些了，看看它们的大家族</p><p>因为有些常用 有些不常用。所以我们就只学习常用的即可</p><h3 id="_1-3-1-e-first-child" tabindex="-1"><a class="header-anchor" href="#_1-3-1-e-first-child" aria-hidden="true">#</a> 1.3.1. E:first-child</h3><p>匹配父元素的第一个子元素E。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">ul li:first-child</span><span class="token punctuation">{</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>E:last-child</strong> 则是选择到了最后一个li标签</p><h3 id="_1-3-2-e-nth-child-n-e-nth-last-child-n" tabindex="-1"><a class="header-anchor" href="#_1-3-2-e-nth-child-n-e-nth-last-child-n" aria-hidden="true">#</a> 1.3.2. E:nth-child(n) E:nth-last-child(n)</h3><p>匹配到父元素的第n个元素 或者 是倒数第n个元素</p><p>相比 <code>E:first-child</code> 则要强大了不少，功能如下 （<strong>死记硬背是最好的</strong>）</p><ul><li><p>匹配到父元素的第2个子元素</p><p><code>ul li:nth-child(2){}</code></p></li><li><p>匹配到父元素的倒数第2个子元素</p><p><code>ul li:nth-last-child(2){}</code></p></li><li><p>匹配到父元素的序号为奇数的子元素</p><p><code>ul li:nth-child(odd){}</code> <strong>odd</strong> 是关键字 奇数的意思（3个字母 ）</p></li><li><p>匹配到父元素的序号为偶数的子元素</p><p><code>ul li:nth-child(even){}</code> <strong>even</strong>（4个字母 ）</p></li><li><p><strong>匹配到父元素的前3个子元素</strong></p><p><code>ul li:nth-child(-n+3){}</code></p><p>选择器中的 <strong>n</strong> 是怎么变化的呢？</p><p>因为 n是从 0 ，1，2，3.. 一直递增</p><p>所以 -n+3 就变成了</p><ul><li>n=0 时 -0+3=3</li><li>n=1时 -1+3=2</li><li>n=2时 -2+3=1</li><li>n=3时 -3+3=0</li><li>...</li></ul></li><li><p>匹配到父元素的后3个子元素</p><p><code>ul li:nth-last-child(-n+3){}</code></p></li></ul><h3 id="_1-3-3-e-nth-of-type-n" tabindex="-1"><a class="header-anchor" href="#_1-3-3-e-nth-of-type-n" aria-hidden="true">#</a> 1.3.3. E:nth-of-type(n)</h3><p>这里只讲明 <strong>E:nth-child(n)</strong> 和 <strong>E:nth-of-type(n)</strong> 的区别 剩下的 <strong>E:first-of-type</strong> <strong>E:last-of-type</strong> <strong>E:nth-last-of-type(n)</strong> 同理做推导即可</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">ul li:nth-child(2)</span><span class="token punctuation">{</span>
      <span class="token comment">/* 字体变成红色 */</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">ul li:nth-of-type(2)</span><span class="token punctuation">{</span>
      <span class="token comment">/* 背景变成绿色 */</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>乱来的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也就是说</p><ul><li><code>E:nth-child(n)</code> 匹配父元素的第n个子元素E。</li><li><code>E:nth-of-type(n)</code> 匹配同类型中的第n个同级兄弟元素E。</li></ul><h2 id="_1-4-属性选择符-了解" tabindex="-1"><a class="header-anchor" href="#_1-4-属性选择符-了解" aria-hidden="true">#</a> 1.4. 属性选择符 了解</h2><ol><li>E[att] 选择具有att属性的E元素。</li><li>E[att=&quot;val&quot;] 选择具有att属性且属性值等于val的E元素。</li><li>E[att^=&quot;val&quot;] 选择具有att属性且属性值为以val开头的字符串的E元素。</li><li>E[att$=&quot;val&quot;] 选择具有att属性且属性值为包含val的字符串的E元素</li><li>E[att*=&quot;val&quot;] 选择具有att属性且属性值为包含val的字符串的E元素。</li></ol><h2 id="_1-5-伪元素选择器-了解" tabindex="-1"><a class="header-anchor" href="#_1-5-伪元素选择器-了解" aria-hidden="true">#</a> 1.5. 伪元素选择器 了解</h2><h3 id="_1-5-1-伪元素种类" tabindex="-1"><a class="header-anchor" href="#_1-5-1-伪元素种类" aria-hidden="true">#</a> 1.5.1. 伪元素种类</h3><ol><li>E::before 在E元素前插入一个元素</li><li>E::after 在E元素后插入一个元素</li><li>E::first-letter 选择到了E容器内的第一个字母</li><li>E::first-line 选择到了E容器内的第一行文本</li></ol><h3 id="_1-5-2-h5写法和传统写法区别-了解" tabindex="-1"><a class="header-anchor" href="#_1-5-2-h5写法和传统写法区别-了解" aria-hidden="true">#</a> 1.5.2. h5写法和传统写法区别 了解</h3><ol><li>单冒号 <code>E:before</code></li><li>双冒号 <code>E::before</code></li><li>浏览器对以上写法都能识别 <strong>双冒号</strong> 是h5上语法的规范</li></ol><h3 id="_1-5-3-伪元素的注意事项-了解" tabindex="-1"><a class="header-anchor" href="#_1-5-3-伪元素的注意事项-了解" aria-hidden="true">#</a> 1.5.3. 伪元素的注意事项 了解</h3><p>想要让伪元素有效，必须遵循以下注意事项</p><ol><li>伪元素只能给双标签加 不能给单标签加</li><li>伪元素的冒号前不能有空格 如 <code>E ::before</code> 这个写法是错误的</li><li>伪元素里面必须写上属性 <code>content:&quot;&quot;</code>;</li></ol><h2 id="_1-6-2d转换-变换-transform" tabindex="-1"><a class="header-anchor" href="#_1-6-2d转换-变换-transform" aria-hidden="true">#</a> 1.6. 2D转换（变换）transform</h2><p>2d转换是改变标签在<strong>2维平面</strong>上的<strong>位置和形状</strong>的一种技术，先来学习2维坐标系</p><h3 id="_1-6-1-2维坐标系" tabindex="-1"><a class="header-anchor" href="#_1-6-1-2维坐标系" aria-hidden="true">#</a> 1.6.1. 2维坐标系</h3><p><strong>2维坐标系</strong>其实就是指布局的时候的坐标系 如图</p><h3 id="_1-6-2-2d移动-translate" tabindex="-1"><a class="header-anchor" href="#_1-6-2-2d移动-translate" aria-hidden="true">#</a> 1.6.2. 2d移动 translate</h3><p>2d移动是2d转换里面的一种功能，可以改变元素在页面中的位置，类似 <strong>定位</strong></p><p>使用2d移动的步骤：</p><ol><li>给元素添加 <strong>转换属性</strong> <code>transform</code></li><li>属性值为 <code>translate(x,y)</code> 如 <code>transform:translate(50px,50px)</code>;</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>50px<span class="token punctuation">,</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-6-2-1-小结" tabindex="-1"><a class="header-anchor" href="#_1-6-2-1-小结" aria-hidden="true">#</a> 1.6.2.1. 小结</h4><ol><li><strong>translate</strong>中的百分比单位是相对于自身元素的 <code>translate:(50%,50%);</code></li><li><strong>translate</strong>类似定位，不会影响到其他元素的位置</li><li>对行内标签没有效果</li></ol><p>d</p>`,82),p=[l];function o(i,c){return n(),s("div",null,p)}const r=a(e,[["render",o],["__file","01-html5css3.html.vue"]]);export{r as default};
